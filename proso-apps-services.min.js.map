{"version":3,"file":"proso-apps-services.min.js","sources":["proso-apps-services.js"],"names":["obj2get","obj","prefix","ignore_prefix_keys","str","key","hasOwnProperty","indexOf","encodeURIComponent","angular","module","value","window","gettext","x","filter","msgid","configServiceLoaded","m","factory","$http","$window","$cookieStore","configService","self","this","config","getConfig","appName","defaultValue","variable","overridden","isDebug","console","log","error","path","split","i","length","debug","loadConfig","get","success","response","processConfig","data","copy","override","$","isNumeric","parseFloat","put","removeOverridden","resetOverridden","getOverridden","$httpProvider","interceptors","push","$injector","request","has","url","match","loggingServiceLoaded","loggingService","debugLog","debugLogListeners","getDebugLog","extendDebugLog","events","forEach","e","listener","addDebugLogListener","Object","debug_log","service","$q","$cookies","queue","deferredFC","promiseResolvedTmp","currentFC","answerQueue","current","setId","summary","contexts","initSet","configName","set_length","fc_queue_size_max","fc_queue_size_min","save_answer_immediately","cache_context","setFilter","flushAnswerQueue","clearQueue","flashcards","answers","correct","count","categories","types","extend","getCurrent","saveAnswer","answer","forceSave","time","Date","now","flashcard_id","flashcard_answered_id","time_gap","Math","round","defaults","headers","post","csrftoken","params","_getFilter","saveAnswerToCurrentFC","answeredFCId","responseTime","meta","id","response_time","direction","client_meta","practice_meta","options","option_ids","o","getFlashcard","resolve","reject","defer","_resolvePromise","promise","then","preloadFlashcards","_loadFlashcards","getFCQueue","getAnswerQueue","getSummary","s","min","flashcard","limit","avoid","fc","request_in_set","concat","_loadContexts","context_id","context","shift","ignore","Array","JSON","stringify","without_contexts","filters","addGroup","language","addGroupParams","getStats","mastered","username","getStatsPost","clean","getGroups","status","logged","loading","user","update","sessionUpdated","init","signup","_resetError","_processUser","signupParams","name","email","pass","pass2","firstName","lastName","password","password_check","first_name","last_name","getUserProfile","stats","loadUser","processUser","undefined","profile","send_emails","public","updateSession","login","logout","clearObj","prop","loadUserFromJS","scope","$apply","loadSession","session","locale","navigator","userLanguage","browserLanguage","display_height","innerHeight","display_width","innerWidth","time_zone","jstz","determine","err","updateProfile","loginGoogle","_openPopup","loginFacebook","next","settings","open","controller","$scope","$timeout","date","opened","maximized","loggingOpened","abTestingOpened","flashcardsLimit","unshift","$watch","n","addToOverride","keys","k","openABTesting","abExperiment","filter_column","filter_value","learning_curve_length","setups","setup","values","variables","variable_id","drawABTestingBar","showFlashcardsPractice","flashcardsAnswers","flashcardsCategories","map","trim","flashcardsContexts","flashcardsTypes","document","getElementById","innerHTML","showFlashcardsAnswers","column","google","visualization","DataTable","addColumn","type","role","addRows","number_of_answers","confidence_interval","max","number_of_users","returning_chance","view","title","columns","DataView","setColumns","chart","ColumnChart","legend","position","vAxis","format","width","height","intervals","styel","pointSize","barWidth","lineWidth","chartArea","draw","drawABTestingLearning","all_users","learning_curve_accessor","rows","row","LineChart","hAxis","style","fillOpacity","curveType","showAuditChart","auditLimit","auditUser","auditPrimary","auditSecondary","auditKey","reverse","record","formatter","NumberFormat","fractionDigits","pattern","recommendUser","recommendationRegisterMin","register_min","recommendationRegisterMax","register_max","recommendationAnswersMin","number_of_answers_min","recommendationAnswersMax","number_of_answers_max","recommendationSuccessMin","success_min","recommendationSuccessMax","success_max","recommendationVariableName","variable_name","recommendationVariableMin","variable_min","recommendationVariableMax","variable_max","recommendationOutput","directive","restrict","templateUrl","run","$templateCache","$$csp","element","find","prepend"],"mappings":"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","sourcesContent":["/*\n * proso-apps-js\n * Version: 1.0.0 - 2015-08-20\n * License: MIT\n */\nangular.module(\"proso.apps\", [\"proso.apps.tpls\", \"proso.apps.common-config\",\"proso.apps.common-logging\",\"proso.apps.flashcards-practice\",\"proso.apps.flashcards-userStats\",\"proso.apps.user-user\", \"proso.apps.common-toolbar\"])\nangular.module(\"proso.apps.tpls\", [\"templates/common-toolbar/toolbar.html\"]);\nangular.module(\"proso.apps.gettext\", [])\n.value(\"gettext\", window.gettext || function(x){return x;})\n.filter(\"trans\", [\"gettext\", function(gettext) {\n    return function(msgid) {\n        return gettext(msgid);\n    };\n}]);\nvar configServiceLoaded;\nif (configServiceLoaded){\n    throw \"ConfigService already loaded\";\n}\nconfigServiceLoaded = true;\n\nfunction obj2get(obj, prefix, ignore_prefix_keys){\n    var str = \"\";\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (str !== \"\") {\n                str += \"&\";\n            }\n            if (ignore_prefix_keys.indexOf(key) === -1){\n                str += prefix;\n            }\n            str += key + \"=\" + encodeURIComponent(obj[key]);\n        }\n    }\n    return str;\n}\n\nvar m = angular.module('proso.apps.common-config', ['ngCookies']);\n\nm.factory(\"configService\", [\"$http\", \"$window\", \"$cookieStore\", function($http, $window, $cookieStore){\n    if (!!$window.configService){\n        return $window.configService;\n    }\n\n    var self = this;\n    var config = null;\n\n    self.getConfig = function (appName, key, defaultValue) {\n        var variable = null;\n        if (typeof overridden[appName + \".\" + key] !== 'undefined') {\n            variable = overridden[appName + \".\" + key];\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"overridden\", variable);\n            }\n            return variable;\n        }\n\n        if (config === null) {\n            console.error(\"Config not loaded\");\n            return;\n        }\n\n        variable = config[appName];\n        var path = key.split(\".\");\n        for (var i = 0; i < path.length; i++) {\n            if (typeof variable === 'undefined') {\n                if (self.isDebug()) {\n                    console.log(appName + \".\" + key, \"use default\", defaultValue);\n                }\n                return defaultValue;\n            }\n            variable = variable[path[i]];\n        }\n        if (typeof variable === 'undefined') {\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"use default\", defaultValue);\n            }\n            return defaultValue;\n        }\n        if (self.isDebug()) {\n            console.log(appName + \".\" + key, \"from config\", variable);\n        }\n        return variable;\n    };\n\n    self.isDebug = function() {\n        return overridden.debug === true;\n    };\n\n    self.loadConfig = function () {\n        return $http.get(\"/common/config/\")\n            .success(function (response) {\n                self.processConfig(response.data);\n            })\n            .error(function () {\n                console.error(\"Problem while loading config from server\");\n            });\n    };\n\n    self.processConfig = function (data) {\n        config = angular.copy(data);\n    };\n\n    self.override = function (key, value) {\n        if (value === 'true') {\n            value = true;\n        } else if (value === 'false') {\n            value = false;\n        } else if ($.isNumeric(value)) {\n            value = parseFloat(value);\n        }\n        overridden[key] = value;\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.removeOverridden = function (key) {\n        delete overridden[key];\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.resetOverridden = function () {\n        overridden = {};\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.getOverridden = function () {\n        return angular.copy(overridden);\n    };\n\n    var overridden = $cookieStore.get(\"configService:overridden\") || {};\n    $window.configService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var configService;\n    $httpProvider.interceptors.push(function($injector){\n        return {\n            request: function(config){\n                if (!$injector.has('configService')) {\n                    console.log('There is no configuration service available.');\n                    return config;\n                }\n                configService = configService || $injector.get(\"configService\");\n                if (config.url.split(\"?\")[0].match(/\\.\\w+$/) !== null){\n                    return config;\n                }\n                var overridden = obj2get(configService.getOverridden(), \"config.\", [\"user\", \"time\", \"debug\"]);\n                if (overridden === \"\"){\n                    return config;\n                }\n                config.url += config.url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n                config.url += overridden;\n                return config;\n            }\n        };\n    });\n}]);\n\n\nvar loggingServiceLoaded;\nif (loggingServiceLoaded){\n    throw \"LoggingService already loaded\";\n}\nloggingServiceLoaded = true;\n\nvar m = angular.module('proso.apps.common-logging', []);\n\nm.factory(\"loggingService\", [\"$window\", function($window) {\n    if (!!$window.loggingService){\n        return $window.loggingService;\n    }\n\n    var self = this;\n    var debugLog = [];\n    var debugLogListeners = [];\n\n    self.getDebugLog = function() {\n        return debugLog;\n    };\n\n    self.extendDebugLog = function(url, events) {\n        events.forEach(function(e) {\n            e.url = url;\n            debugLog.push(e);\n        });\n        debugLogListeners.forEach(function(listener) {\n            listener(events);\n        });\n    };\n\n    self.addDebugLogListener = function(listener) {\n        debugLogListeners.push(listener);\n    };\n\n    $window.loggingService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var loggingService;\n    $httpProvider.interceptors.push(function($injector) {\n        return {\n            response: function(response) {\n                loggingService = loggingService || $injector.get(\"loggingService\");\n                if (response.data instanceof Object && 'debug_log' in response.data) {\n                    loggingService.extendDebugLog(response.config.url, response.data.debug_log);\n                }\n                return response;\n            }\n        };\n    });\n}]);\n\nvar m = angular.module('proso.apps.flashcards-practice', ['ngCookies', 'proso.apps.common-config']);\nm.service(\"practiceService\", [\"$http\", \"$q\", \"configService\", \"$cookies\", function($http, $q, configService, $cookies){\n    var self = this;\n\n    var queue = [];\n    var deferredFC = null;\n    var promiseResolvedTmp = false;\n    var currentFC = null;\n    var answerQueue = [];\n\n    var config = {};\n    var current = 0;\n    var setId = 0;\n    var summary = {};\n\n    var contexts = {};\n\n    // called on create and set reset\n    self.initSet = function(configName){\n        var key = \"practice.\" + configName + \".\";\n        config.set_length = configService.getConfig(\"proso_flashcards\", key + \"set_length\", 10);\n        config.fc_queue_size_max = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_max\", 1);\n        config.fc_queue_size_min = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_min\", 1);\n        config.save_answer_immediately = configService.getConfig(\"proso_flashcards\", key + \"save_answer_immediately\", false);\n        config.cache_context = configService.getConfig(\"proso_flashcards\", key + \"cache_context\", false);\n\n        self.setFilter({});\n        current = 0;\n        currentFC = null;\n        self.flushAnswerQueue();\n        self.clearQueue();\n        deferredFC = null;\n        setId++;\n        summary = {\n            flashcards: [],\n            answers: [],\n            correct: 0,\n            count: 0\n        };\n    };\n\n    self.setFilter = function(filter){\n        config.filter = {\n            contexts: [],\n            categories: [],\n            types: []\n        };\n        angular.extend(config.filter, filter);\n    };\n\n    self.getCurrent = function(){\n        return current;\n    };\n\n    self.getConfig = function(){\n        return angular.copy(config);\n    };\n\n    // add answer to queue and upload queued answers if necessary\n    self.saveAnswer = function(answer, forceSave){\n        if (answer) {\n            answer.time = Date.now();\n            answerQueue.push(answer);\n            summary.answers.push(answer);\n            summary.count++;\n            if (answer.flashcard_id === answer.flashcard_answered_id) {\n                summary.correct++;\n            }\n        }\n\n        if (config.save_answer_immediately || forceSave || current >= config.set_length) {\n            if (answerQueue.length > 0) {\n                answerQueue.forEach(function(answer){\n                    answer.time_gap = Math.round((Date.now() - answer.time) / 1000);\n                    delete answer.time;\n                });\n                $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n                $http.post(\"/flashcards/answer/\", {answers: answerQueue}, {params: _getFilter(['avoid', 'limit'])})\n                    .error(function (response) {\n                        console.error(\"Problem while uploading answer\", response);\n                    });\n                answerQueue = [];\n            }\n        }\n    };\n\n    self.flushAnswerQueue = function(){\n        self.saveAnswer(null, true);\n    };\n\n    // build answer from current FC and save\n    self.saveAnswerToCurrentFC = function(answeredFCId, responseTime, meta){\n        if (!currentFC) {\n            console.error(\"There is no current flashcard\");\n            return;\n        }\n        var answer = {\n            flashcard_id: currentFC.id,\n            flashcard_answered_id: answeredFCId,\n            response_time: responseTime,\n            direction: currentFC.direction\n        };\n        if (meta) {\n            answer.meta = {client_meta: meta};\n        }\n        if (currentFC.practice_meta) {\n            if (answer.meta) {\n                answer.meta = angular.extend(answer.meta, currentFC.practice_meta);\n            } else {\n                answer.meta = currentFC.practice_meta;\n            }\n        }\n        if (currentFC.options){\n            answer.option_ids = [];\n            currentFC.options.forEach(function(o){\n                if (o.id !== currentFC.id) {\n                    answer.option_ids.push(o.id);\n                }\n            });\n        }\n        self.saveAnswer(answer);\n    };\n\n    // return promise of flashcard\n    self.getFlashcard = function(){\n        if(deferredFC){\n            return $q(function(resolve, reject){\n                reject(\"Already one flashcard promised\");\n            });\n        }\n        deferredFC  = $q.defer();\n        promiseResolvedTmp = false;\n        _resolvePromise();\n        deferredFC.promise.then(function(){ deferredFC = null;}, function(){ deferredFC = null;});\n        return deferredFC.promise;\n    };\n\n    self.clearQueue = function(){\n        queue = [];\n    };\n\n    // preload flashcards\n    self.preloadFlashcards = function(){\n        _loadFlashcards();\n    };\n\n    self.getFCQueue = function(){\n        return queue;\n    };\n\n    self.getAnswerQueue = function(){\n        return answerQueue;\n    };\n\n    self.getSummary = function(){\n        var s = angular.copy(summary);\n        for (var i = 0; i < Math.min(s.flashcards.length, s.answers.length); i++){\n            var answer = s.answers[i];\n            var flashcard = s.flashcards[i];\n            if (flashcard.id === answer.flashcard_id){\n                flashcard.answer = answer;\n            }\n            answer.correct = answer.flashcard_id === answer.flashcard_answered_id;\n        }\n        return s;\n    };\n\n\n    var _loadFlashcards = function(){\n        if (queue.length >= config.fc_queue_size_min) { return; }                                       // if there are some FC queued\n            config.filter.limit  = config.fc_queue_size_max - queue.length;\n        if (deferredFC && !promiseResolvedTmp) { config.filter.limit ++; }                  // if we promised one flashcard\n        config.filter.limit = Math.min(config.filter.limit, config.set_length - current - queue.length);  // check size of set\n        if (config.filter.limit === 0) {return;}                         // nothing to do\n        config.filter.avoid = currentFC ? [currentFC.id] : [];      // avoid current FC\n        queue.forEach(function(fc){\n            config.filter.avoid.push(fc.id);\n        });\n\n        var filter = _getFilter();\n        var request;\n        if (answerQueue.length === 0) {\n            request = $http.get(\"/flashcards/practice/\", {params: filter});\n        }else{\n            $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n            request = $http.post(\"/flashcards/practice/\", {answers: answerQueue}, {params: filter});\n            answerQueue = [];\n        }\n        var request_in_set = setId;\n        request\n            .success(function(response){\n                if (request_in_set !== setId) {\n                    return;\n                }\n                queue = queue.concat(response.data.flashcards);\n                _loadContexts();\n                if (queue.length > 0) {\n                    _resolvePromise();\n                }\n                else{\n                    console.error(\"No Flashcards to practice\");\n                }\n            })\n            .error(function (response) {\n                if (deferredFC !== null){\n                    deferredFC.reject(\"Something went wrong while loading flashcards from backend.\");\n                }\n                console.error(\"Something went wrong while loading flashcards from backend.\");\n            });\n\n    };\n\n    var _loadContexts = function(){\n        if (config.cache_context){\n            queue.forEach(function(fc){\n                if (fc.context_id in contexts){\n                    if (contexts[fc.context_id] !== \"loading\"){\n                        fc.context = contexts[fc.context_id];\n                    }\n                }else{\n                    contexts[fc.context_id] = \"loading\";\n                    $http.get(\"/flashcards/context/\" + fc.context_id)\n                        .success(function(response){\n                            contexts[fc.context_id] = response.data;\n                            _resolvePromise();\n                        }).error(function(){\n                            delete contexts[fc.context_id];\n                            console.error(\"Error while loading context from backend\");\n                        });\n                }\n            });\n        }\n    };\n\n    var _resolvePromise = function(){\n        if (deferredFC === null){\n            return;\n        }\n        if (config.set_length === current){\n            deferredFC.reject(\"Set was completed\");\n            return;\n        }\n        if (queue.length > 0) {\n            if (config.cache_context){\n                if (typeof contexts[queue[0].context_id]  === 'object'){\n                    queue[0].context = contexts[queue[0].context_id];\n                }else{\n                    return;\n                }\n            }\n            currentFC = queue.shift();\n            current++;\n            promiseResolvedTmp = true;\n            summary.flashcards.push(currentFC);\n            deferredFC.resolve(currentFC);\n        }\n        _loadFlashcards();\n    };\n\n    var _getFilter = function(ignore) {\n        if (!ignore) {\n            ignore = [];\n        }\n        var filter = {};\n        for (var key in config.filter){\n            if (ignore.indexOf(key) !== -1) {\n                continue;\n            }\n            if (config.filter[key] instanceof Array) {\n                filter[key] = JSON.stringify(config.filter[key]);\n            }else{\n                filter[key] = config.filter[key];\n            }\n        }\n        if (config.cache_context){\n            filter.without_contexts = 1;\n        }\n        return filter;\n    };\n}]);\n\nvar m = angular.module('proso.apps.flashcards-userStats', ['ngCookies']);\nm.service(\"userStatsService\", [\"$http\", \"$cookies\", function($http, $cookies){\n    var self = this;\n\n    var filters = {};\n\n    self.addGroup = function (id, data) {\n        if (!data.language){\n            delete data.language;\n        }\n        filters[id] = data;\n    };\n\n    self.addGroupParams = function (id, categories, contexts, types, language) {\n        filters[id] = {\n            categories: categories,\n            contexts: contexts,\n            types: types\n        };\n        if (typeof language !== \"undefined\"){\n            filters[id].language = language;\n        }\n    };\n\n    self.getStats = function(mastered, username){\n        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n        var params = {filters: JSON.stringify(filters)};\n        if (mastered){\n            params.mastered = true;\n        }\n        if (username){\n            params.username = username;\n        }\n        return $http.get(\"/flashcards/user_stats/\", {params: params});\n    };\n\n    self.getStatsPost = function(mastered, username){\n        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n        var params = \"?\";\n        params += mastered ? \"&mastered=true\" : \"\";\n        params += username ? \"&username=\"+username : \"\";\n        return $http.post(\"/flashcards/user_stats/\" + params, filters);\n    };\n\n    self.clean = function(){\n        filters = {};\n    };\n\n    self.getGroups = function (){\n        return angular.copy(filters);\n    };\n\n}]);\n\nvar m = angular.module('proso.apps.user-user', ['ngCookies']);\nm.service(\"userService\", [\"$http\", function($http){\n    var self = this;\n    self.status = {\n        \"logged\": false,\n        \"loading\": false\n    };\n    self.user = {};\n    var update = this.update = {};\n    var sessionUpdated = false;\n    self.error = {};\n\n    // called on create\n    self.init = function (){\n    };\n\n    self.signup = function(data){\n        self.status.loading = true;\n        _resetError();\n        var promise = $http.post(\"/user/signup/\", data);\n        promise.success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n        return promise;\n    };\n\n    self.signupParams = function(name, email, pass, pass2, firstName, lastName){\n        return self.signup({\n            \"username\": name,\n            \"email\": email,\n            \"password\": pass,\n            \"password_check\": pass2,\n            \"first_name\": firstName,\n            \"last_name\": lastName\n        });\n    };\n\n    // get public user profile from backend\n    self.getUserProfile = function(username, stats){\n        var params = {username: username};\n        if (stats){\n            params.stats = true;\n        }\n        return $http.get(\"/user/profile/\", {params: params});\n    };\n\n    // get user profile from backend\n    self.loadUser = function(stats){\n        self.status.loading = true;\n        var params = {};\n        if (stats){\n            params.stats = true;\n        }\n        return $http.get(\"/user/profile/\", {params: params})\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.processUser = function(data){\n        _processUser(angular.copy(data));\n    };\n\n    // process user data\n    var _processUser = function(data){\n        if (!data) {\n            self.status.logged = false;\n            return;\n        }\n        self.status.logged = data.user && data.user.email !== undefined;\n        self.user.profile = data;\n        angular.extend(self.user, data.user);\n        angular.extend(update, {\n            user: {\n                first_name: self.user.first_name,\n                last_name: self.user.last_name\n            },\n            send_emails: self.user.profile.send_emails,\n            public: self.user.profile.public\n        });\n        delete self.user.profile.user;\n        if (!sessionUpdated){\n            self.updateSession();\n            sessionUpdated = true;\n        }\n    };\n\n    self.login = function(username, pass){\n        self.status.loading = true;\n        _resetError();\n        var promise = $http.post(\"/user/login/\", {\n            username: username,\n            password: pass\n        });\n        promise.success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n        return promise;\n    };\n\n    self.logout = function(){\n        self.status.loading = true;\n        $http.get(\"/user/logout/\")\n            .success(function(response){\n                clearObj(self.user);\n                self.status.logged = false;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n\n    var _resetError = function(){\n        clearObj(self.error);\n    };\n\n    var clearObj = function(obj){\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)){ delete obj[prop]; }\n        }\n    };\n\n\n    self.loadUserFromJS = function (scope, stats) {\n        scope.$apply(self.loadUser(stats));\n    };\n\n    self.loadSession = function(){\n        self.status.loading = true;\n        $http.get(\"/user/session/\")\n            .success(function(response){\n                self.user.session = response.data;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.updateSession = function(){\n        var data = {\n            locale: window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage,\n            display_height: window.innerHeight,\n            display_width: window.innerWidth\n        };\n        try{\n            data.time_zone = jstz.determine().name();\n        }catch (err){ console.log(\"JSTimeZone lib not loaded\");}\n        $http.post(\"/user/session/\", data).error(function(){\n            console.error(\"Error while updating session\");\n        });\n    };\n\n    self.updateProfile = function(user){\n        var data = {\n          user: {},\n        };\n        if (user.profile) {\n          angular.extend(data, user.profile);\n        }\n        angular.extend(data.user, user);\n        delete data.user.profile;\n        delete data.user.username;\n\n        self.status.loading = true;\n        _resetError();\n        var promise = $http.post(\"/user/profile/\", data);\n        promise.success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            }).finally(function(response){\n                self.status.loading = false;\n            });\n        return promise;\n    };\n\n    self.loginGoogle = function() {\n        _openPopup('/login/google-oauth2/', '/user/close_popup/');\n    };\n\n    self.loginFacebook = function() {\n        _openPopup('/login/facebook/', '/user/close_popup/');\n    };\n\n    var _openPopup = function(url, next){\n        var settings = 'height=700,width=700,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=yes,directories=no,status=yes';\n        url += \"?next=\" + next;\n        window.open(url, \"popup\", settings);\n    };\n\n    self.init();\n\n}]);\n\nvar m = angular.module('proso.apps.common-toolbar', ['ngCookies', 'proso.apps.common-config']);\n\nm.controller(\"ToolbarController\", ['$scope', '$cookies', 'configService', 'loggingService', '$timeout', '$http', function($scope, $cookies, configService, loggingService, $timeout, $http) {\n    $scope.override = configService.override;\n    $scope.removeOverridden = configService.removeOverridden;\n    $scope.date = new Date();\n    $scope.debugLog = [];\n    $scope.opened = $cookies[\"toolbar:opened\"] === \"true\";\n    $scope.maximized = $cookies[\"toolbar:maximized\"] === \"true\";\n    $scope.loggingOpened = true;\n    $scope.abTestingOpened = false;\n    $scope.flashcardsLimit = 10;\n    $scope.override('debug', true);\n    $scope.overridden = configService.getOverridden();\n    loggingService.addDebugLogListener(function(events) {\n        $timeout(function(){\n            events.forEach(function (e) {\n                $scope.debugLog.unshift(e);\n            });\n        });\n    });\n\n    $scope.$watch(\"opened\", function(n, o){\n        $cookies[\"toolbar:opened\"] = n;\n    });\n\n    $scope.$watch(\"maximized\", function(n, o){\n        $cookies[\"toolbar:maximized\"] = n;\n    });\n\n    $scope.addToOverride = function(name) {\n        if (!name) {\n            return;\n        }\n        configService.override(name, '');\n    };\n\n    $scope.getOverridden = function() {\n        var overridden = configService.getOverridden();\n        Object.keys(overridden).filter(function(k) {\n            return (k === 'user' || k === 'debug' || k === 'time');\n        }).forEach(function (k) {\n            delete overridden[k];\n        });\n        return overridden;\n    };\n\n    $scope.openABTesting = function() {\n        $scope.abTestingOpened = ! $scope.abTestingOpened;\n        if ($scope.abTestingOpened && !$scope.abExperiment) {\n            $http.get('/configab/experiments', {params: {filter_column: 'is_enabled', filter_value: true, stats: true, learning_curve_length: 5}})\n                .success(function(response) {\n                    var data = response.data;\n                    if (data.length === 0) {\n                        return;\n                    }\n                    $scope.abExperiment = data[0];\n                    $scope.abExperiment.setups.forEach(function(setup) {\n                        setup.values.forEach(function(value) {\n                            $scope.abExperiment.variables.forEach(function(variable) {\n                                if (variable.id = value.variable_id) {\n                                    value.variable = variable;\n                                }\n                            });\n                        });\n                    });\n                    $scope.drawABTestingBar();\n                });\n        }\n        $scope.drawABTestingBar();\n    };\n\n    $scope.showFlashcardsPractice = function() {\n        $scope.flashcardsAnswers = [];\n        var params = {\n            limit: $scope.flashcardsLimit\n        };\n        if ($scope.flashcardsCategories) {\n            params.categories = JSON.stringify(\n                $scope.flashcardsCategories.split(',').map(function(x) { return x.trim(); })\n            );\n        }\n        if ($scope.flashcardsContexts) {\n            params.contexts = JSON.stringify(\n                $scope.flashcardsContexts.split(',').map(function(x) { return x.trim(); })\n            );\n        }\n        if ($scope.flashcardsTypes) {\n            params.types = JSON.stringify(\n                $scope.flashcardsTypes.split(',').map(function(x) { return x.trim(); })\n            );\n        }\n        $http.get('/flashcards/practice_image', {params: params}).success(function(response) {\n            document.getElementById(\"flashcardsChart\").innerHTML = response;\n        });\n    };\n\n    $scope.showFlashcardsAnswers = function() {\n        document.getElementById(\"flashcardsChart\").innerHTML = '';\n        $http.get('/flashcards/answers', {params: {limit: $scope.flashcardsLimit}}).success(function(response) {\n            $scope.flashcardsAnswers = response.data;\n        });\n    };\n\n    $scope.drawABTestingBar = function(column) {\n        if (!$scope.abExperiment) {\n            return;\n        }\n        var data = new google.visualization.DataTable();\n        data.addColumn('string', 'Experiment Setup');\n        data.addColumn('number', 'Number of Answers');\n        data.addColumn({type: 'number', role: 'interval'});\n        data.addColumn({type: 'number', role: 'interval'});\n        data.addColumn('number', 'Number of Users');\n        data.addColumn('number', 'Returning Chance');\n        data.addColumn({type: 'number', role: 'interval'});\n        data.addColumn({type: 'number', role: 'interval'});\n        data.addRows($scope.abExperiment.setups.map(function(setup) {\n            return [\n                'Setup #' + setup.id,\n                setup.stats.number_of_answers.value,\n                setup.stats.number_of_answers.confidence_interval.min,\n                setup.stats.number_of_answers.confidence_interval.max,\n                setup.stats.number_of_users,\n                setup.stats.returning_chance.value,\n                setup.stats.returning_chance.confidence_interval.min,\n                setup.stats.returning_chance.confidence_interval.max,\n            ];\n        }));\n        var view = data;\n        var title = 'All';\n        if (column) {\n            var columns = {\n                number_of_answers: [0, 1, 2, 3],\n                number_of_users: [0, 4],\n                returning_chance: [0, 5, 6, 7],\n            };\n            title = column;\n            view = new google.visualization.DataView(data);\n            view.setColumns(columns[column]);\n        }\n        var chart = new google.visualization.ColumnChart(document.getElementById(\"abChart\"));\n        var options = {\n            title: title,\n            legend: {\n                position: 'none'\n            },\n            vAxis: {\n                format: '#.###'\n            },\n            width: 480,\n            height: 300,\n            intervals: {\n                styel: 'bars',\n                pointSize: 10,\n                barWidth: 0,\n                lineWidth: 4,\n            },\n            chartArea: {'width': '80%', 'height': '80%'}\n        };\n        chart.draw(view, options);\n    };\n\n    $scope.drawABTestingLearning = function(all_users) {\n        if (!$scope.abExperiment) {\n            return;\n        }\n        var learning_curve_accessor = 'learning_curve';\n        if (all_users) {\n            learning_curve_accessor = 'learning_curve_all_users';\n        }\n        var data = new google.visualization.DataTable();\n        data.addColumn({type: 'number', role: 'domain'});\n        var length = 0;\n        $scope.abExperiment.setups.forEach(function(setup) {\n            data.addColumn('number', 'Setup #' + setup.id);\n            data.addColumn({type: 'number', role: 'interval'});\n            data.addColumn({type: 'number', role: 'interval'});\n            length = Math.max(setup.stats[learning_curve_accessor].success.length);\n        });\n        var rows = [];\n        for (var i = 0; i < length; i++) {\n            var row = [i];\n            /*jshint -W083 */\n            $scope.abExperiment.setups.forEach(function(setup) {\n                row.push(setup.stats[learning_curve_accessor].success[i].value);\n                row.push(setup.stats[learning_curve_accessor].success[i].confidence_interval.min);\n                row.push(setup.stats[learning_curve_accessor].success[i].confidence_interval.max);\n            });\n            rows.push(row);\n        }\n        data.addRows(rows);\n        var chart = new google.visualization.LineChart(document.getElementById(\"abChart\"));\n        var options = {\n            title: 'Learning',\n            legend: {\n                position: 'none'\n            },\n            vAxis: {\n                format: '#.###'\n            },\n            hAxis: {\n                title: 'Attempt',\n                position: 'center'\n            },\n            intervals: {\n                style: 'area',\n                fillOpacity: 0.2\n            },\n            lineWidth: 4,\n            pointSize: 10,\n            curveType: 'function',\n            width: 480,\n            height: 300,\n            'chartArea': {'width': '80%', 'height': '80%'}\n        };\n        chart.draw(data, options);\n    };\n\n    $scope.showAuditChart = function() {\n        var params = {};\n        if ($scope.auditLimit) {\n            params['limit'] = $scope.auditLimit;\n        }\n        if ($scope.auditUser) {\n            params['user'] = $scope.auditUser;\n        }\n        if ($scope.auditPrimary) {\n            params['item'] = $scope.auditPrimary;\n        }\n        if ($scope.auditSecondary) {\n            params['item_secondary'] = $scope.auditSecondary;\n        }\n        $http.get(\"/models/audit/\" + $scope.auditKey, {params: params})\n            .success(function(response) {\n                var data = new google.visualization.DataTable();\n                data.addColumn('number', 'Update');\n                data.addColumn('number', 'Value');\n                data.addColumn({type: 'datetime', role: 'tooltip'});\n                response.data.reverse();\n                var rows = [];\n                for (var i = 0; i < response.data.length; i++) {\n                    var record = response.data[i];\n                    rows.push([i, record.value, new Date(record.time)]);\n                }\n                data.addRows(rows);\n                var options = {\n                    title: $scope.auditKey,\n                    legend: {\n                        position: 'none'\n                    },\n                    vAxis: {\n                        format: '#.###'\n                    },\n                    hAxis: {\n                        title: 'Update',\n                        position: 'center'\n                    },\n                    width: 480,\n                    height: 300,\n                    'chartArea': {'width': '80%', 'height': '80%'}\n                };\n                var formatter = new google.visualization.NumberFormat({\n                    fractionDigits: 3, pattern: '#.###'\n                });\n                formatter.format(data, 1);\n                var chart = new google.visualization.LineChart(document.getElementById('auditChart'));\n                chart.draw(data, options);\n            });\n    };\n\n    $scope.recommendUser = function() {\n        var filter = {};\n        if ($scope.recommendationRegisterMin) {\n            filter.register_min = $scope.recommendationRegisterMin;\n        }\n        if ($scope.recommendationRegisterMax) {\n            filter.register_max = $scope.recommendationRegisterMax;\n        }\n        if ($scope.recommendationAnswersMin) {\n            filter.number_of_answers_min = $scope.recommendationAnswersMin;\n        }\n        if ($scope.recommendationAnswersMax) {\n            filter.number_of_answers_max = $scope.recommendationAnswersMax;\n        }\n        if ($scope.recommendationSuccessMin) {\n            filter.success_min = $scope.recommendationSuccessMin;\n        }\n        if ($scope.recommendationSuccessMax) {\n            filter.success_max = $scope.recommendationSuccessMax;\n        }\n        if ($scope.recommendationVariableName) {\n            filter.variable_name = $scope.recommendationVariableName;\n        }\n        if ($scope.recommendationVariableMin) {\n            filter.variable_min = $scope.recommendationVariableMin;\n        }\n        if ($scope.recommendationVariableMax) {\n            filter.variable_max = $scope.recommendationVariableMax;\n        }\n        $scope.recommendationOutput = 'Loading...';\n        $http.get('/models/recommend_users', {params: filter})\n            .success(function (response) {\n                if (response.data.length > 0) {\n                    $scope.recommendationOutput = response.data[0];\n                } else {\n                    $scope.recommendationOutput = 'Not Found';\n                }\n            });\n    };\n\n}]);\n\nm.directive('toolbar', [function () {\n    return {\n        restrict: 'E',\n        controller: 'ToolbarController',\n        templateUrl: 'templates/common-toolbar/toolbar.html'\n    };\n}]);\n\nangular.module(\"templates/common-toolbar/toolbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/common-toolbar/toolbar.html\",\n    \"<div id=\\\"proso-toolbar\\\">\\n\" +\n    \"    <div id=\\\"config-bar-show-button\\\" ng-click=\\\"opened = !opened\\\" ng-hide=\\\"opened\\\"> proso bar </div>\\n\" +\n    \"\\n\" +\n    \"    <div id=\\\"config-bar\\\" ng-cloak ng-show=\\\"opened\\\" ng-class=\\\"{'maximized' : maximized}\\\">\\n\" +\n    \"        <div id=\\\"config-bar-header\\\">\\n\" +\n    \"            <span id=\\\"config-bar-maximize\\\" ng-click=\\\"maximized = !maximized\\\">Maximize</span>\\n\" +\n    \"            <span id=\\\"config-bar-hide\\\" ng-click=\\\"opened = !opened\\\">Close</span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <ul id=\\\"config-bar-content\\\">\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"addToOverride(propertyToOverride)\\\" class=\\\"add-to-override\\\">+</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"propertyToOverride\\\" id=\\\"config-bar-property-name\\\" placeholder=\\\"Property Name\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('user'); overridden.user = null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"number\\\" ng-model=\\\"overridden.user\\\" placeholder=\\\"User\\\" ng-change=\\\"override('user', overridden.user)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li style=\\\"display: none\\\">\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('time'); overridden.time= null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"overridden.time\\\" placeholder=\\\"Time\\\" ng-change=\\\"override('time', overridden.time)\\\" />\\n\" +\n    \"                <i>{{date | date:'yyyy-MM-dd_HH:mm:ss'}}</i>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ng-repeat=\\\"(name, value) in getOverridden() track by name\\\">\\n\" +\n    \"                <span class=\\\"reset\\\" ng-click=\\\"removeOverridden(name)\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" disabled class=\\\"property-name\\\" ng-model=\\\"name\\\" />\\n\" +\n    \"                <input type=\\\"text\\\" class=\\\"property-value\\\" placeholder=\\\"Value\\\" ng-model=\\\"value\\\" ng-change=\\\"override(name, value)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <div class='section' ng-click=\\\"openABTesting()\\\">AB Testing <span id=\\\"abExperimentName\\\">{{abExperiment.identifier }}</span></div>\\n\" +\n    \"            <ul id=\\\"config-bar-ab\\\" ng-cloak ng-show=\\\"abTestingOpened\\\">\\n\" +\n    \"                <li>\\n\" +\n    \"                    <ul id=\\\"abSetupInfo\\\">\\n\" +\n    \"                        <li ng-repeat=\\\"setup in abExperiment.setups\\\">\\n\" +\n    \"                            <strong class=\\\"setup-id\\\">#{{ setup.id }}</strong>\\n\" +\n    \"                            <ul>\\n\" +\n    \"                                <li ng-repeat=\\\"value in setup.values\\\">\\n\" +\n    \"                                    <span class=\\\"variable-name\\\" title=\\\"{{ value.variable.app_name }}.{{ value.variable.name }} \\\">\\n\" +\n    \"                                        {{ value.variable.name.split('.').slice(-1)[0] | limitTo: 12 }}{{ value.variable.name.split('.').slice(-1)[0].length > 12 ? '...' : '' }}\\n\" +\n    \"                                    </span>\\n\" +\n    \"                                    <span class=\\\"variable-value\\\" title=\\\"{{ value.value }}\\\">{{ value.value.split('.').slice(-1)[0] | limitTo: 12 }} {{ value.value.split('.').slice(-1)[0].length > 12 ? '...' : '' }}</span>\\n\" +\n    \"                                    <span class=\\\"comma\\\" ng-if=\\\"!$last\\\">,</a>\\n\" +\n    \"                                </li>\\n\" +\n    \"                            </ul>\\n\" +\n    \"                        </li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                <li>\\n\" +\n    \"                <div id=\\\"abChart\\\"></div>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingBar()\\\" class=\\\"ab-experiment-chart-button\\\">All</button>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingBar('number_of_users')\\\" class=\\\"ab-experiment-chart-button\\\">Users</button>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingBar('number_of_answers')\\\" class=\\\"ab-experiment-chart-button\\\">Answers</button>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingBar('returning_chance')\\\" class=\\\"ab-experiment-chart-button\\\">Return</button>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingLearning(false)\\\" class=\\\"ab-experiment-chart-button\\\" title=\\\"Learning curve containing only users with at least the given number of testing answers\\\">Learn</button>\\n\" +\n    \"                    <button ng-click=\\\"drawABTestingLearning(true)\\\" class=\\\"ab-experiment-chart-button\\\" title=\\\"Learning curve containing all users with at least one testing answer\\\">Learn (A)</button>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <div class='section' ng-click=\\\"flashcardsOpened = !flashcardsOpened\\\">Flashcards</div>\\n\" +\n    \"            <ul id=\\\"config-bar-flashcards\\\" ng-cloak ng-show=\\\"flashcardsOpened\\\">\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"flashcardsCategories\\\" placeholder=\\\"Categories\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"flashcardsContexts\\\" placeholder=\\\"Contexts\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"flashcardsTypes\\\" placeholder=\\\"Types\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"flashcardsLimit\\\" placeholder=\\\"Limit\\\" />\\n\" +\n    \"                    <button ng-click=\\\"showFlashcardsPractice()\\\">Show Practice</button>\\n\" +\n    \"                    <button ng-click=\\\"showFlashcardsAnswers()\\\">Show Answers</button>\\n\" +\n    \"                </li>\\n\" +\n    \"                <div style=\\\"overflow: auto; width: 100%; height: 300px;\\\">\\n\" +\n    \"                    <table ng-show=\\\"flashcardsAnswers.length > 0\\\" id=\\\"flashcardsAnswers\\\">\\n\" +\n    \"                        <thead>\\n\" +\n    \"                            <tr>\\n\" +\n    \"                                <th>#</th>\\n\" +\n    \"                                <th>User</th>\\n\" +\n    \"                                <th>Item</th>\\n\" +\n    \"                                <th>Asked</th>\\n\" +\n    \"                                <th>Answered</th>\\n\" +\n    \"                                <th>Opt.</th>\\n\" +\n    \"                            </tr>\\n\" +\n    \"                        </thead>\\n\" +\n    \"                        <tbody>\\n\" +\n    \"                            <tr ng-repeat=\\\"answer in flashcardsAnswers\\\">\\n\" +\n    \"                                <td>\\n\" +\n    \"                                    <a href=\\\"/flashcards/answer/{{ answer.id }}?html\\\" title=\\\"{{answer.time | date:'yyyy-MM-dd_HH:mm:ss'}}, direction: {{ answer.direction }}\\\">\\n\" +\n    \"                                        {{ answer.id }}\\n\" +\n    \"                                    </a>\\n\" +\n    \"                                </td>\\n\" +\n    \"                                <td>{{ answer.user_id }}</td>\\n\" +\n    \"                                <td>{{ answer.item_asked_id }}</td>\\n\" +\n    \"                                <td>{{ answer.flashcard_asked.identifier | limitTo:12 }} {{ answer.flashcard_answered.identifier.length > 12 ? '...' : '' }}</td>\\n\" +\n    \"                                <td ng-class=\\\"{true: 'correct', false: 'wrong'}[answer.item_asked_id == answer.item_answered_id]\\\">\\n\" +\n    \"                                    {{ answer.flashcard_answered.identifier | limitTo:12 }}{{ answer.flashcard_answered.identifier.length > 12 ? '...' : '' }}\\n\" +\n    \"                                </td>\\n\" +\n    \"                                <td class=\\\"direction-{{ answer.direction }}\\\">{{ answer.options.length }}</td>\\n\" +\n    \"                            </tr>\\n\" +\n    \"                        </tbody>\\n\" +\n    \"                    </table>\\n\" +\n    \"                    <div id=\\\"flashcardsChart\\\"></div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <div class='section' ng-click=\\\"auditOpened = !auditOpened\\\">Models Audit</div>\\n\" +\n    \"            <ul id=\\\"config-bar-audit\\\" ng-cloak ng-show=\\\"auditOpened\\\">\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"auditLimit\\\" placeholder=\\\"Limit\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"auditKey\\\" placeholder=\\\"Key\\\" id=\\\"config-bar-audit-key\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"auditUser\\\" placeholder=\\\"User\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"auditPrimary\\\" placeholder=\\\"Item Primary\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"auditSecondary\\\" placeholder=\\\"Item Secondary\\\" />\\n\" +\n    \"                    <button ng-click=\\\"showAuditChart()\\\">Show Chart</button>\\n\" +\n    \"                </li>\\n\" +\n    \"                <div id=\\\"auditChart\\\"></div>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <div class='section' ng-click=\\\"recommendationOpened = !recommendationOpened\\\">Recommend User</div>\\n\" +\n    \"            <ul id=\\\"config-bar-recommendation\\\" ng-cloak ng-show=\\\"recommendationOpened\\\">\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Register Time\\\" disabled/>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Min\\\" ng-model=\\\"recommendationRegisterMin\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Max\\\" ng-model=\\\"recommendationRegisterMax\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Number of Answers\\\" disabled/>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Min\\\" ng-model=\\\"recommendationAnswersMin\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Max\\\" ng-model=\\\"recommendationAnswersMax\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Success\\\" disabled/>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Min\\\" ng-model=\\\"recommendationSuccessMin\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Max\\\" ng-model=\\\"recommendationSuccessMax\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Variable Name\\\" ng-model=\\\"recommendationVariableName\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Min\\\" ng-model=\\\"recommendationVariableMin\\\" />\\n\" +\n    \"                    <input type=\\\"text\\\" placeholder=\\\"Max\\\" ng-model=\\\"recommendationVariableMax\\\" />\\n\" +\n    \"                </li>\\n\" +\n    \"                <li>\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"recommendationOutput\\\" disabled />\\n\" +\n    \"                    <button ng-click=\\\"recommendUser()\\\">Recommend</button>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <div class='section' ng-click=\\\"loggingOpened = !loggingOpened\\\">Logging</div>\\n\" +\n    \"            <ul id=\\\"config-bar-logging\\\" ng-cloak ng-show=\\\"loggingOpened\\\">\\n\" +\n    \"                <li ng-repeat=\\\"event in debugLog|limitTo:100\\\" class=\\\"logging-event\\\">\\n\" +\n    \"                    <span class=\\\"level\\\">{{ event.level }}</span>\\n\" +\n    \"                    <span class=\\\"url\\\">{{ event.url }}</span>\\n\" +\n    \"                    <span class=\\\"filename\\\">{{ event.filename }}:{{ event.line_number }}</span>\\n\" +\n    \"                    <span class=\\\"message\\\">{{ event.message }}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">#config-bar-show-button{position:fixed;right:-40px;top:250px;width:100px;transform:rotate(-90deg);-webkit-transform:rotate(-90deg);border:solid #808080 1px;margin:0;padding:10px;text-transform:capitalize;font-weight:bold;background-color:rgba(255,255,255,0.8);transition:all 0.2s;cursor:pointer;text-align:center;z-index:1000;}#config-bar-show-button:hover{background-color:#1f8dd6;color:white;}#config-bar{position:fixed;right:0;top:0;bottom:0;width:500px;border-left:solid #808080 1px;background-color:rgba(255,255,255,0.8);z-index:1000;}#config-bar.maximized{width:100%;}#config-bar-header{background-color:rgba(31,141,214,0.8);margin:0;padding:5px 10px;text-align:right;color:white;}#config-bar-content .section{background-color:rgba(31,141,214,0.8);margin:5px 0;padding:5px 10px;color:white;text-transform:uppercase;cursor:pointer;}#config-bar-maximize{text-align:right;cursor:pointer;margin-right:20px;}#config-bar-hide{text-align:right;width:100%;cursor:pointer;}#config-bar-content{margin:0;list-style:none;padding:0;}#config-bar-content > li{border-bottom:1px dashed #E9F4FB;padding:5px 10px;margin:0;}#config-bar-content > li:hover{background:#E9F4FB;}#config-bar-content .reset,#config-bar-content .add-to-override{cursor:pointer;font-weight:bolder;}#config-bar-content input{padding:5px 10px;}#config-bar-content label{margin-left:10px;cursor:pointer;}#config-bar-content .link{text-transform:uppercase;cursor:pointer;font-weight:bold;}#config-bar-logging{list-style:none;margin:0;padding:0;max-height:500px;overflow-y:scroll;font-size:12px;}#config-bar-logging > li{margin:0;padding:5px 10px;border-bottom:1px solid #E9F4FB;}#config-bar-logging > li:hover{background-color:#E9F4FB;}#config-bar-logging .level{display:block;float:left;width:10%;font-weight:bold;}#config-bar-logging .url{font-weight:bold;margin-left:10px;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:50%;float:left;}#config-bar-logging .filename{display:block;float:right;text-align:right;width:30%;font-weight:bold;}#config-bar-logging .message{display:block;clear:both;margin-top:20px;margin-bottom:5px;}#config-bar-content .property-name{width:70%;}#config-bar-content .property-value{width:10%;text-align:center;}#config-bar-property-name{width:70%;}#config-bar-audit,#config-bar-ab,#config-bar-flashcards,#config-bar-recommendation{padding-left:5px;}#config-bar-audit li,#config-bar-ab li,#config-bar-flashcards li,#config-bar-recommendation li{padding-left:0;margin-left:0;list-style:none;margin-bottom:5px;}#config-bar-ab ul{padding-left:0;margin-left:0;}.ab-experiment-chart-button{font-size:13px;width:15%;}#config-bar-audit input,#config-bar-flashcards input,#config-bar-recommendation input{width:27%;}#config-bar-audit button,#config-bar-flashcards button,#config-bar-recommendation button{width:27%;}#auditChart{margin:10px auto;width:480px;}#abChart{margin:0 auto;width:480px;}#flashcardsChart{margin:0 auto;width:100%;height:1000px;}#abExperimentName{margin-left:20px;font-weight:bold;}#abSetupInfo > li > ul,#abSetupInfo > li > ul > li{display:inline;}#flashcardsAnswers{width:100%;}#flashcardsAnswers thead{color:#fff;background-color:rgba(31,141,214,0.8);}#flashcardsAnswers th,#flashcardsAnswers td{text-align:center;}#flashcardsAnswers tbody tr:nth-child(even){background-color:#E9F4FB;}#flashcardsAnswers tbody tr:nth-child(odd){background-color:#fff;}#flashcardsAnswers td.correct{background-color:#009933;color:white;}#flashcardsAnswers td.wrong{background-color:#cc0000;color:white;}#flashcardsAnswers td.direction-t2d{background-color:#ff9900;color:white;}#flashcardsAnswers td.direction-d2t{background-color:#ffff00;}</style>');\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">.rating .btn{margin:20px;}</style>');"]}