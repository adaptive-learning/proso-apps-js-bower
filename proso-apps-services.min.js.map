{"version":3,"file":"proso-apps-services.min.js","sources":["proso-apps-services.js"],"names":["obj2get","obj","prefix","ignore_prefix_keys","str","key","hasOwnProperty","indexOf","encodeURIComponent","angular","module","value","window","gettext","x","filter","msgid","configServiceLoaded","m","factory","$http","$window","$cookieStore","configService","self","this","config","getConfig","appName","defaultValue","variable","overridden","isDebug","console","log","error","path","split","i","length","debug","loadConfig","get","success","response","processConfig","data","copy","override","$","isNumeric","parseFloat","put","removeOverridden","resetOverridden","getOverridden","$httpProvider","interceptors","push","$injector","request","has","url","match","loggingServiceLoaded","loggingService","debugLog","debugLogListeners","getDebugLog","extendDebugLog","events","forEach","e","listener","addDebugLogListener","Object","debug_log","service","$q","$cookies","queue","deferredFC","promiseResolvedTmp","currentFC","answerQueue","current","setId","summary","contexts","loadingFlashcards","initSet","configName","set_length","fc_queue_size_max","fc_queue_size_min","save_answer_immediately","cache_context","setFilter","flushAnswerQueue","clearQueue","flashcards","answers","correct","count","categories","types","extend","getCurrent","saveAnswer","answer","farceSave","time","Date","now","flashcard_id","flashcard_answered_id","time_gap","Math","round","defaults","headers","post","csrftoken","saveAnswerToCurrentFC","answeredFCId","responseTime","meta","id","response_time","direction","options","option_ids","o","getFlashcard","resolve","reject","defer","_resolvePromise","promise","then","preloadFlashcards","_loadFlashcards","getFCQueue","getAnswerQueue","getSummary","s","min","flashcard","limit","avoid","fc","Array","JSON","stringify","without_contexts","params","request_in_set","concat","_loadContexts","context_id","context","shift","filters","addGroup","language","addGroupParams","getStats","mastered","username","getStatsPost","clean","getGroups","status","logged","loading","user","update","sessionUpdated","init","signup","_resetError","_processUser","signupParams","name","email","pass","pass2","firstName","lastName","password","password_check","first_name","last_name","getUserProfile","stats","loadUser","processUser","profile","send_emails","public","updateSession","login","logout","clearObj","prop","loadUserFromJS","scope","$apply","loadSession","session","locale","navigator","userLanguage","browserLanguage","display_height","innerHeight","display_width","innerWidth","time_zone","jstz","determine","err","updateProfile","loginGoogle","_openPopup","loginFacebook","next","settings","open","controller","$scope","$timeout","date","opened","loggingOpened","unshift","$watch","n","addToOverride","keys","k","directive","restrict","templateUrl","run","$templateCache","$$csp","element","document","find","prepend"],"mappings":"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","sourcesContent":["/*\n * proso-apps-js\n * Version: 1.0.0 - 2015-07-07\n * License: MIT\n */\nangular.module(\"proso.apps\", [\"proso.apps.tpls\", \"proso.apps.common-config\",\"proso.apps.common-logging\",\"proso.apps.flashcards-practice\",\"proso.apps.flashcards-userStats\",\"proso.apps.gettext\",\"proso.apps.user-user\", \"proso.apps.common-toolbar\"])\nangular.module(\"proso.apps.tpls\", [\"templates/common-toolbar/toolbar.html\"]);\nangular.module(\"proso.apps.gettext\", [])\n.value(\"gettext\", window.gettext || function(x){return x;})\n.filter(\"trans\", [\"gettext\", function(gettext) {\n    return function(msgid) {\n        return gettext(msgid);\n    };\n}]);\nvar configServiceLoaded;\nif (configServiceLoaded){\n    throw \"ConfigService already loaded\";\n}\nconfigServiceLoaded = true;\n\nfunction obj2get(obj, prefix, ignore_prefix_keys){\n    var str = \"\";\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (str !== \"\") {\n                str += \"&\";\n            }\n            if (ignore_prefix_keys.indexOf(key) === -1){\n                str += prefix;\n            }\n            str += key + \"=\" + encodeURIComponent(obj[key]);\n        }\n    }\n    return str;\n}\n\nvar m = angular.module('proso.apps.common-config', ['ngCookies']);\n\nm.factory(\"configService\", [\"$http\", \"$window\", \"$cookieStore\", function($http, $window, $cookieStore){\n    if (!!$window.configService){\n        return $window.configService;\n    }\n\n    var self = this;\n    var config = null;\n\n    self.getConfig = function (appName, key, defaultValue) {\n        var variable = null;\n        if (typeof overridden[appName + \".\" + key] !== 'undefined') {\n            variable = overridden[appName + \".\" + key];\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"overridden\", variable);\n            }\n            return variable;\n        }\n\n        if (config === null) {\n            console.error(\"Config not loaded\");\n            return;\n        }\n\n        variable = config[appName];\n        var path = key.split(\".\");\n        for (var i = 0; i < path.length; i++) {\n            if (typeof variable === 'undefined') {\n                if (self.isDebug()) {\n                    console.log(appName + \".\" + key, \"use default\", defaultValue);\n                }\n                return defaultValue;\n            }\n            variable = variable[path[i]];\n        }\n        if (typeof variable === 'undefined') {\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"use default\", defaultValue);\n            }\n            return defaultValue;\n        }\n        if (self.isDebug()) {\n            console.log(appName + \".\" + key, \"from config\", variable);\n        }\n        return variable;\n    };\n\n    self.isDebug = function() {\n        return overridden.debug === true;\n    };\n\n    self.loadConfig = function () {\n        return $http.get(\"/common/config/\")\n            .success(function (response) {\n                self.processConfig(response.data);\n            })\n            .error(function () {\n                console.error(\"Problem while loading config from server\");\n            });\n    };\n\n    self.processConfig = function (data) {\n        config = angular.copy(data);\n    };\n\n    self.override = function (key, value) {\n        if (value === 'true') {\n            value = true;\n        } else if (value === 'false') {\n            value = false;\n        } else if ($.isNumeric(value)) {\n            value = parseFloat(value);\n        }\n        overridden[key] = value;\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.removeOverridden = function (key) {\n        delete overridden[key];\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.resetOverridden = function () {\n        overridden = {};\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.getOverridden = function () {\n        return angular.copy(overridden);\n    };\n\n    var overridden = $cookieStore.get(\"configService:overridden\") || {};\n    $window.configService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var configService;\n    $httpProvider.interceptors.push(function($injector){\n        return {\n            request: function(config){\n                if (!$injector.has('configService')) {\n                    console.log('There is no configuration service available.');\n                    return config;\n                }\n                configService = configService || $injector.get(\"configService\");\n                if (config.url.split(\"?\")[0].match(/\\.\\w+$/) !== null){\n                    return config;\n                }\n                var overridden = obj2get(configService.getOverridden(), \"config.\", [\"user\", \"time\", \"debug\"]);\n                if (overridden === \"\"){\n                    return config;\n                }\n                config.url += config.url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n                config.url += overridden;\n                return config;\n            }\n        };\n    });\n}]);\n\n\nvar loggingServiceLoaded;\nif (loggingServiceLoaded){\n    throw \"LoggingService already loaded\";\n}\nloggingServiceLoaded = true;\n\nvar m = angular.module('proso.apps.common-logging', []);\n\nm.factory(\"loggingService\", [\"$window\", function($window) {\n    if (!!$window.loggingService){\n        return $window.loggingService;\n    }\n\n    var self = this;\n    var debugLog = [];\n    var debugLogListeners = [];\n\n    self.getDebugLog = function() {\n        return debugLog;\n    };\n\n    self.extendDebugLog = function(url, events) {\n        events.forEach(function(e) {\n            e.url = url;\n            debugLog.push(e);\n        });\n        debugLogListeners.forEach(function(listener) {\n            listener(events);\n        });\n    };\n\n    self.addDebugLogListener = function(listener) {\n        debugLogListeners.push(listener);\n    };\n\n    $window.loggingService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var loggingService;\n    $httpProvider.interceptors.push(function($injector) {\n        return {\n            response: function(response) {\n                loggingService = loggingService || $injector.get(\"loggingService\");\n                if (response.data instanceof Object && 'debug_log' in response.data) {\n                    loggingService.extendDebugLog(response.config.url, response.data.debug_log);\n                }\n                return response;\n            }\n        };\n    });\n}]);\n\nvar m = angular.module('proso.apps.flashcards-practice', ['ngCookies', 'proso.apps.common-config']);\nm.service(\"practiceService\", [\"$http\", \"$q\", \"configService\", \"$cookies\", function($http, $q, configService, $cookies){\n    var self = this;\n\n    var queue = [];\n    var deferredFC = null;\n    var promiseResolvedTmp = false;\n    var currentFC = null;\n    var answerQueue = [];\n\n    var config = {};\n    var current = 0;\n    var setId = 0;\n    var summary = {};\n\n    var contexts = {};\n\n    var loadingFlashcards = false;\n\n    // called on create and set reset\n    self.initSet = function(configName){\n        var key = \"practice.\" + configName + \".\";\n        config.set_length = configService.getConfig(\"proso_flashcards\", key + \"set_length\", 10);\n        config.fc_queue_size_max = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_max\", 1);\n        config.fc_queue_size_min = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_min\", 1);\n        config.save_answer_immediately = configService.getConfig(\"proso_flashcards\", key + \"save_answer_immediately\", false);\n        config.cache_context = configService.getConfig(\"proso_flashcards\", key + \"cache_context\", false);\n\n        self.setFilter({});\n        current = 0;\n        self.flushAnswerQueue();\n        self.clearQueue();\n        deferredFC = null;\n        setId++;\n        summary = {\n            flashcards: [],\n            answers: [],\n            correct: 0,\n            count: 0\n        };\n    };\n\n    self.setFilter = function(filter){\n        config.filter = {\n            contexts: [],\n            categories: [],\n            types: []\n        };\n        angular.extend(config.filter, filter);\n    };\n\n    self.getCurrent = function(){\n        return current;\n    };\n\n    self.getConfig = function(){\n        return angular.copy(config);\n    };\n\n    // add answer to queue and upload queued answers if necessary\n    self.saveAnswer = function(answer, farceSave){\n        if (answer) {\n            answer.time = Date.now();\n            answerQueue.push(answer);\n            summary.answers.push(answer);\n            summary.count++;\n            if (answer.flashcard_id === answer.flashcard_answered_id) {\n                summary.correct++;\n            }\n        }\n\n        if (config.save_answer_immediately || farceSave || current >= config.set_length) {\n            if (answerQueue.length > 0) {\n                answerQueue.forEach(function(answer){\n                    answer.time_gap = Math.round((Date.now() - answer.time) / 1000);\n                    delete answer.time;\n                });\n                $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n                $http.post(\"/flashcards/answer/\", {answers: answerQueue})\n                    .error(function (response) {\n                        console.error(\"Problem while uploading answer\", response);\n                    });\n                answerQueue = [];\n            }\n        }\n    };\n\n    self.flushAnswerQueue = function(){\n        self.saveAnswer(null, true);\n    };\n\n    // build answer from current FC and save\n    self.saveAnswerToCurrentFC = function(answeredFCId, responseTime, meta){\n        if (!currentFC) {\n            console.error(\"There is no current flashcard\");\n            return;\n        }\n        var answer = {\n            flashcard_id: currentFC.id,\n            flashcard_answered_id: answeredFCId,\n            response_time: responseTime,\n            direction: currentFC.direction\n        };\n        if (meta) {\n            answer.meta = meta;\n        }\n        if (currentFC.options){\n            answer.option_ids = [];\n            currentFC.options.forEach(function(o){\n                if (o.id !== currentFC.id) {\n                    answer.option_ids.push(o.id);\n                }\n            });\n        }\n        self.saveAnswer(answer);\n    };\n\n    // return promise of flashcard\n    self.getFlashcard = function(){\n        if(deferredFC){\n            return $q(function(resolve, reject){\n                reject(\"Already one flashcard promised\");\n            });\n        }\n        deferredFC  = $q.defer();\n        promiseResolvedTmp = false;\n        _resolvePromise();\n        deferredFC.promise.then(function(){ deferredFC = null;}, function(){ deferredFC = null;});\n        return deferredFC.promise;\n    };\n\n    self.clearQueue = function(){\n        queue = [];\n    };\n\n    // preload flashcards\n    self.preloadFlashcards = function(){\n        _loadFlashcards();\n    };\n\n    self.getFCQueue = function(){\n        return queue;\n    };\n\n    self.getAnswerQueue = function(){\n        return answerQueue;\n    };\n\n    self.getSummary = function(){\n        var s = angular.copy(summary);\n        for (var i = 0; i < Math.min(s.flashcards.length, s.answers.length); i++){\n            var answer = s.answers[i];\n            var flashcard = s.flashcards[i];\n            if (flashcard.id === answer.flashcard_id){\n                flashcard.answer = answer;\n            }\n            answer.correct = answer.flashcard_id === answer.flashcard_answered_id;\n        }\n        return s;\n    };\n\n\n    var _loadFlashcards = function(){\n        if (loadingFlashcards){\n            return;                             // loading request is already running\n        }\n\n        if (queue.length >= config.fc_queue_size_min) { return; }                                       // if there are some FC queued\n            config.filter.limit  = config.fc_queue_size_max - queue.length;\n        if (deferredFC && !promiseResolvedTmp) { config.filter.limit ++; }                  // if we promised one flashcard\n        config.filter.limit = Math.min(config.filter.limit, config.set_length - current - queue.length);  // check size of set\n        if (config.filter.limit === 0) {return;}                         // nothing to do\n        config.filter.avoid = currentFC ? [currentFC.id] : [];      // avoid current FC\n        queue.forEach(function(fc){\n            config.filter.avoid.push(fc.id);\n        });\n\n        var filter = {};\n        for (var key in config.filter){\n            if (config.filter[key] instanceof Array) {\n                filter[key] = JSON.stringify(config.filter[key]);\n            }else{\n                filter[key] = config.filter[key];\n            }\n        }\n        if (config.cache_context){\n            filter.without_contexts = 1;\n        }\n\n        var request;\n        if (answerQueue.length === 0) {\n            request = $http.get(\"/flashcards/practice/\", {params: filter});\n        }else{\n            $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n            request = $http.post(\"/flashcards/practice/\", {answers: answerQueue}, {params: filter});\n            answerQueue = [];\n        }\n        var request_in_set = setId;\n        loadingFlashcards = true;\n        request\n            .success(function(response){\n                if (request_in_set !== setId) {\n                    return;\n                }\n                queue = queue.concat(response.data.flashcards);\n                _loadContexts();\n                if (queue.length > 0) {\n                    _resolvePromise();\n                }\n                else{\n                    console.error(\"No Flashcards to practice\");\n                }\n            })\n            .error(function (response) {\n                if (deferredFC !== null){\n                    deferredFC.reject(\"Something went wrong while loading flashcards from backend.\");\n                }\n                console.error(\"Something went wrong while loading flashcards from backend.\");\n            })\n            .finally(function(){\n                loadingFlashcards = false;\n            });\n\n    };\n\n    var _loadContexts = function(){\n        if (config.cache_context){\n            queue.forEach(function(fc){\n                if (fc.context_id in contexts){\n                    if (contexts[fc.context_id] !== \"loading\"){\n                        fc.context = contexts[fc.context_id];\n                    }\n                }else{\n                    contexts[fc.context_id] = \"loading\";\n                    $http.get(\"/flashcards/context/\" + fc.context_id)\n                        .success(function(response){\n                            contexts[fc.context_id] = response.data;\n                            _resolvePromise();\n                        }).error(function(){\n                            delete contexts[fc.context_id];\n                            console.error(\"Error while loading context from backend\");\n                        });\n                }\n            });\n        }\n    };\n\n    var _resolvePromise = function(){\n        if (deferredFC === null){\n            return;\n        }\n        if (config.set_length === current){\n            deferredFC.reject(\"Set was completed\");\n            return;\n        }\n        if (queue.length > 0) {\n            if (config.cache_context){\n                if (typeof contexts[queue[0].context_id]  === 'object'){\n                    queue[0].context = contexts[queue[0].context_id];\n                }else{\n                    return;\n                }\n            }\n            currentFC = queue.shift();\n            current++;\n            promiseResolvedTmp = true;\n            summary.flashcards.push(currentFC);\n            deferredFC.resolve(currentFC);\n        }\n        _loadFlashcards();\n    };\n}]);\n\nvar m = angular.module('proso.apps.flashcards-userStats', ['ngCookies']);\nm.service(\"userStatsService\", [\"$http\", \"$cookies\", function($http, $cookies){\n    var self = this;\n\n    var filters = {};\n\n    self.addGroup = function (id, data) {\n        if (!data.language){\n            delete data.language;\n        }\n        filters[id] = data;\n    };\n\n    self.addGroupParams = function (id, categories, contexts, types, language) {\n        filters[id] = {\n            categories: categories,\n            contexts: contexts,\n            types: types\n        };\n        if (typeof language !== \"undefined\"){\n            filters[id].language = language;\n        }\n    };\n\n    self.getStats = function(mastered, username){\n        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n        var params = {filters: JSON.stringify(filters)};\n        if (mastered){\n            params.mastered = true;\n        }\n        if (username){\n            params.username = username;\n        }\n        return $http.get(\"/flashcards/user_stats/\", {params: params});\n    };\n\n    self.getStatsPost = function(mastered, username){\n        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n        var params = \"?\";\n        params += mastered ? \"&mastered=true\" : \"\";\n        params += username ? \"&username=\"+username : \"\";\n        return $http.post(\"/flashcards/user_stats/\" + params, filters);\n    };\n\n    self.clean = function(){\n        filters = {};\n    };\n\n    self.getGroups = function (){\n        return angular.copy(filters);\n    };\n\n}]);\n\nvar m = angular.module('proso.apps.user-user', ['ngCookies']);\nm.service(\"userService\", [\"$http\", function($http){\n    var self = this;\n    self.status = {\n        \"logged\": false,\n        \"loading\": false\n    };\n    self.user = {};\n    var update = this.update = {};\n    var sessionUpdated = false;\n    self.error = {};\n\n    // called on create\n    self.init = function (){\n    };\n\n    self.signup = function(data){\n        self.status.loading = true;\n        _resetError();\n        return $http.post(\"/user/signup/\", data)\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.signupParams = function(name, email, pass, pass2, firstName, lastName){\n        return self.signup({\n            \"username\": name,\n            \"email\": email,\n            \"password\": pass,\n            \"password_check\": pass2,\n            \"first_name\": firstName,\n            \"last_name\": lastName\n        });\n    };\n\n    // get public user profile from backend\n    self.getUserProfile = function(username, stats){\n        var params = {username: username};\n        if (stats){\n            params.stats = true;\n        }\n        return $http.get(\"/user/profile/\", {params: params});\n    };\n\n    // get user profile from backend\n    self.loadUser = function(stats){\n        self.status.loading = true;\n        var params = {};\n        if (stats){\n            params.stats = true;\n        }\n        return $http.get(\"/user/profile/\", {params: params})\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.processUser = function(data){\n        _processUser(angular.copy(data));\n    };\n\n    // process user data\n    var _processUser = function(data){\n        if (!data) {\n            self.status.logged = false;\n            return;\n        }\n        self.status.logged = true;\n        self.user.profile = data;\n        angular.extend(self.user, data.user);\n        angular.extend(update, {\n            user: {\n                first_name: self.user.first_name,\n                last_name: self.user.last_name\n            },\n            send_emails: self.user.profile.send_emails,\n            public: self.user.profile.public\n        });\n        delete self.user.profile.user;\n        if (!sessionUpdated){\n            self.updateSession();\n            sessionUpdated = true;\n        }\n    };\n\n    self.login = function(username, pass){\n        self.status.loading = true;\n        _resetError();\n        var promise = $http.post(\"/user/login/\", {\n            username: username,\n            password: pass\n        });\n        promise.success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n        return promise;\n    };\n\n    self.logout = function(){\n        self.status.loading = true;\n        $http.get(\"/user/logout/\")\n            .success(function(response){\n                clearObj(self.user);\n                self.status.logged = false;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n\n    var _resetError = function(){\n        clearObj(self.error);\n    };\n\n    var clearObj = function(obj){\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)){ delete obj[prop]; }\n        }\n    };\n\n\n    self.loadUserFromJS = function (scope, stats) {\n        scope.$apply(self.loadUser(stats));\n    };\n\n    self.loadSession = function(){\n        self.status.loading = true;\n        $http.get(\"/user/session/\")\n            .success(function(response){\n                self.user.session = response.data;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.updateSession = function(){\n        var data = {\n            locale: window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage,\n            display_height: window.innerHeight,\n            display_width: window.innerWidth\n        };\n        try{\n            data.time_zone = jstz.determine().name();\n        }catch (err){ console.log(\"JSTimeZone lib not loaded\");}\n        $http.post(\"/user/session/\", data).error(function(){\n            console.error(\"Error while updating session\");\n        });\n    };\n\n    self.updateProfile = function(user){\n        var data = {\n          user: {},\n        };\n        if (user.profile) {\n          angular.extend(data, user.profile);\n        }\n        angular.extend(data.user, user);\n        delete data.user.profile;\n        delete data.user.username;\n\n        self.status.loading = true;\n        _resetError();\n        var promise = $http.post(\"/user/profile/\", data);\n        promise.success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            }).finally(function(response){\n                self.status.loading = false;\n            });\n        return promise;\n    };\n\n    self.loginGoogle = function() {\n        _openPopup('/login/google-oauth2/', '/user/close_popup/');\n    };\n\n    self.loginFacebook = function() {\n        _openPopup('/login/facebook/', '/user/close_popup/');\n    };\n\n    var _openPopup = function(url, next){\n        var settings = 'height=700,width=700,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=yes,directories=no,status=yes';\n        url += \"?next=\" + next;\n        window.open(url, \"popup\", settings);\n    };\n\n    self.init();\n\n}]);\n\nvar m = angular.module('proso.apps.common-toolbar', ['ngCookies', 'proso.apps.common-config']);\n\nm.controller(\"ToolbarController\", ['$scope', '$cookies', 'configService', 'loggingService', '$timeout', function($scope, $cookies, configService, loggingService, $timeout) {\n    $scope.override = configService.override;\n    $scope.removeOverridden = configService.removeOverridden;\n    $scope.date = new Date();\n    $scope.debugLog = [];\n    $scope.opened = $cookies[\"toolbar:opened\"] === \"true\";\n    $scope.loggingOpened = true;\n    $scope.override('debug', true);\n    $scope.overridden = configService.getOverridden();\n    loggingService.addDebugLogListener(function(events) {\n        $timeout(function(){\n            events.forEach(function (e) {\n                $scope.debugLog.unshift(e);\n            });\n        });\n    });\n\n    $scope.$watch(\"opened\", function(n, o){\n        $cookies[\"toolbar:opened\"] = n;\n    });\n\n    $scope.addToOverride = function(name) {\n        if (!name) {\n            return;\n        }\n        configService.override(name, '');\n    };\n\n    $scope.getOverridden = function() {\n        var overridden = configService.getOverridden();\n        Object.keys(overridden).filter(function(k) {\n            return (k === 'user' || k === 'debug' || k === 'time');\n        }).forEach(function (k) {\n            delete overridden[k];\n        });\n        return overridden;\n    };\n\n}]);\n\nm.directive('toolbar', [function () {\n    return {\n        restrict: 'E',\n        controller: 'ToolbarController',\n        templateUrl: 'templates/common-toolbar/toolbar.html'\n    };\n}]);\n\nangular.module(\"templates/common-toolbar/toolbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/common-toolbar/toolbar.html\",\n    \"<div id=\\\"proso-toolbar\\\">\\n\" +\n    \"    <div id=\\\"config-bar-show-button\\\" ng-click=\\\"opened = !opened\\\" ng-hide=\\\"opened\\\"> proso bar </div>\\n\" +\n    \"\\n\" +\n    \"    <div id=\\\"config-bar\\\" ng-cloak ng-show=\\\"opened\\\">\\n\" +\n    \"        <div id=\\\"config-bar-header\\\">\\n\" +\n    \"            <span id=\\\"config-bar-hide\\\" ng-click=\\\"opened = !opened\\\">Close</span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <ul id=\\\"config-bar-content\\\">\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"addToOverride(propertyToOverride)\\\" class=\\\"add-to-override\\\">+</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"propertyToOverride\\\" id=\\\"config-bar-property-name\\\" placeholder=\\\"Property Name\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('user'); overridden.user = null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"number\\\" ng-model=\\\"overridden.user\\\" placeholder=\\\"User\\\" ng-change=\\\"override('user', overridden.user)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('time'); overridden.time= null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"overridden.time\\\" placeholder=\\\"Time\\\" ng-change=\\\"override('time', overridden.time)\\\" />\\n\" +\n    \"                <i>{{date | date:'yyyy-MM-dd_HH:mm:ss'}}</i>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ng-repeat=\\\"(name, value) in getOverridden() track by name\\\">\\n\" +\n    \"                <span class=\\\"reset\\\" ng-click=\\\"removeOverridden(name)\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" disabled class=\\\"property-name\\\" ng-model=\\\"name\\\" />\\n\" +\n    \"                <input type=\\\"text\\\" class=\\\"property-value\\\" placeholder=\\\"Value\\\" ng-model=\\\"value\\\" ng-change=\\\"override(name, value)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <div class='section' ng-click=\\\"loggingOpened = !loggingOpened\\\">Logging</div>\\n\" +\n    \"            <ul id=\\\"config-bar-logging\\\" ng-cloak ng-show=\\\"loggingOpened\\\">\\n\" +\n    \"                <li ng-repeat=\\\"event in debugLog|limitTo:100\\\" class=\\\"logging-event\\\">\\n\" +\n    \"                    <span class=\\\"level\\\">{{ event.level }}</span>\\n\" +\n    \"                    <span class=\\\"url\\\">{{ event.url }}</span>\\n\" +\n    \"                    <span class=\\\"filename\\\">{{ event.filename }}:{{ event.line_number }}</span>\\n\" +\n    \"                    <span class=\\\"message\\\">{{ event.message }}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">#config-bar-show-button{position:fixed;right:-40px;top:250px;width:100px;transform:rotate(-90deg);-webkit-transform:rotate(-90deg);border:solid #808080 1px;margin:0;padding:10px;text-transform:capitalize;font-weight:bold;background-color:rgba(255,255,255,0.8);transition:all 0.2s;cursor:pointer;text-align:center;}#config-bar-show-button:hover{background-color:#1f8dd6;color:white;}#config-bar{position:fixed;right:0;top:0;bottom:0;width:500px;border-left:solid #808080 1px;background-color:rgba(255,255,255,0.8);z-index:1000;}#config-bar-header{background-color:rgba(31,141,214,0.8);margin:0;padding:10px 20px;text-align:right;color:white;}#config-bar-content .section{background-color:rgba(31,141,214,0.8);margin:0;padding:10px 20px;color:white;text-transform:uppercase;cursor:pointer;}#config-bar-hide{text-align:right;width:100%;cursor:pointer;}#config-bar-content{margin:0;list-style:none;padding:0;}#config-bar-content > li{border-bottom:1px dashed #E9F4FB;padding:10px 20px;margin:0;}#config-bar-content > li:hover{background:#E9F4FB;}#config-bar-content .reset,#config-bar-content .add-to-override{cursor:pointer;font-weight:bolder;}#config-bar-content input{padding:5px 10px;}#config-bar-content label{margin-left:10px;cursor:pointer;}#config-bar-content .link{text-transform:uppercase;cursor:pointer;font-weight:bold;}#config-bar-logging{list-style:none;margin:0;padding:0;max-height:500px;overflow-y:scroll;font-size:12px;}#config-bar-logging > li{margin:0;padding:5px 10px;border-bottom:1px solid #E9F4FB;}#config-bar-logging > li:hover{background-color:#E9F4FB;}#config-bar-logging .level{display:block;float:left;width:10%;font-weight:bold;}#config-bar-logging .url{font-weight:bold;margin-left:10px;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:50%;float:left;}#config-bar-logging .filename{display:block;float:right;text-align:right;width:30%;font-weight:bold;}#config-bar-logging .message{display:block;clear:both;margin-top:20px;margin-bottom:5px;}#config-bar-content input{font-size:14px;}#config-bar-content .property-name{width:70%;}#config-bar-content .property-value{width:10%;text-align:center;}#config-bar-property-name{width:70%;}#config-bar-show-button{position:fixed;right:-40px;top:250px;width:100px;transform:rotate(-90deg);-webkit-transform:rotate(-90deg);border:solid #808080 1px;margin:0;padding:10px;text-transform:capitalize;font-weight:bold;background-color:rgba(255,255,255,0.8);transition:all 0.2s;cursor:pointer;text-align:center;}#config-bar-show-button:hover{background-color:#1f8dd6;color:white;}#config-bar{position:fixed;right:0;top:0;bottom:0;width:500px;border-left:solid #808080 1px;background-color:rgba(255,255,255,0.8);z-index:1000;}#config-bar-header{background-color:rgba(31,141,214,0.8);margin:0;padding:10px 20px;text-align:right;color:white;}#config-bar-content .section{background-color:rgba(31,141,214,0.8);margin:0;padding:10px 20px;color:white;text-transform:uppercase;cursor:pointer;}#config-bar-hide{text-align:right;width:100%;cursor:pointer;}#config-bar-content{margin:0;list-style:none;padding:0;}#config-bar-content > li{border-bottom:1px dashed #E9F4FB;padding:10px 20px;margin:0;}#config-bar-content > li:hover{background:#E9F4FB;}#config-bar-content .reset,#config-bar-content .add-to-override{cursor:pointer;font-weight:bolder;}#config-bar-content input{padding:5px 10px;}#config-bar-content label{margin-left:10px;cursor:pointer;}#config-bar-content .link{text-transform:uppercase;cursor:pointer;font-weight:bold;}#config-bar-logging{list-style:none;margin:0;padding:0;max-height:500px;overflow-y:scroll;font-size:12px;}#config-bar-logging > li{margin:0;padding:5px 10px;border-bottom:1px solid #E9F4FB;}#config-bar-logging > li:hover{background-color:#E9F4FB;}#config-bar-logging .level{display:block;float:left;width:10%;font-weight:bold;}#config-bar-logging .url{font-weight:bold;margin-left:10px;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:50%;float:left;}#config-bar-logging .filename{display:block;float:right;text-align:right;width:30%;font-weight:bold;}#config-bar-logging .message{display:block;clear:both;margin-top:20px;margin-bottom:5px;}#config-bar-content input{font-size:14px;}#config-bar-content .property-name{width:70%;}#config-bar-content .property-value{width:10%;text-align:center;}#config-bar-property-name{width:70%;}</style>');\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">.rating .btn{margin:20px;}</style>');"]}