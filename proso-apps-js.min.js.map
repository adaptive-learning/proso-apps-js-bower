{"version":3,"file":"proso-apps-js.min.js","sources":["../src/common-config/config.js","../src/common-config/specs/config.js","../src/common-logging/logging.js","../src/common-toolbar/toolbar.js","../src/feedback-comment/comment.js","../src/feedback-comment/docs/demo.js","../src/feedback-rating/docs/demo.js","../src/feedback-rating/rating.js","../src/flashcards-practice/practice.js","../src/flashcards-practice/specs/practice.js","../src/user-user/specs/user.js","../src/user-user/user.js","../templates/common-toolbar/toolbar.html.js","../templates/feedback-comment/comment.html.js","../templates/feedback-rating/rating.html.js","../templates/user-login/login-modal.html.js","../templates/user-login/signup-modal.html.js"],"names":["obj2get","obj","prefix","ignore_prefix_keys","str","key","hasOwnProperty","indexOf","encodeURIComponent","configServiceLoaded","m","angular","module","factory","$http","$window","$cookieStore","configService","self","this","config","getConfig","appName","defaultValue","variable","overridden","isDebug","console","log","error","path","split","i","length","debug","loadConfig","get","success","response","processConfig","data","copy","override","value","$","isNumeric","parseFloat","put","removeOverridden","resetOverridden","getOverridden","$httpProvider","interceptors","push","$injector","request","has","url","match","A","a","b","c","d","e","f","B","describe","$httpBackend","$configService","beforeEach","inject","afterEach","verifyNoOutstandingExpectation","verifyNoOutstandingRequest","it","expect","toBeDefined","toEqual","not","toBe","expectGET","respond","flush","handler","jasmine","createSpy","then","toHaveBeenCalled","loggingServiceLoaded","loggingService","debugLog","debugLogListeners","getDebugLog","extendDebugLog","events","forEach","listener","addDebugLogListener","Object","debug_log","controller","$scope","$cookies","date","Date","opened","loggingOpened","$apply","unshift","$watch","n","o","addToOverride","name","keys","filter","k","directive","restrict","templateUrl","$modal","gettext","template","join","link","element","attrs","feedback","email","text","openFeedback","open","ModalFeedbackCtrl","size","resolve","$modalInstance","$location","alerts","send","page","absUrl","defaults","headers","post","csrftoken","type","msg","sending","closeAlert","index","splice","cancel","dismiss","dummy","$rootScope","openRating","$emit","$on","event","args","vote","answer","service","$q","queue","deferredFC","promiseResolvedTmp","currentFC","answerQueue","current","setId","summary","contexts","initSet","configName","set_length","fc_queue_size_max","fc_queue_size_min","save_answer_immediately","cache_context","setFilter","flushAnswerQueue","clearQueue","flashcards","answers","correct","count","categories","types","extend","getCurrent","saveAnswer","farceSave","time","now","flashcard_id","flashcard_answered_id","time_gap","Math","round","saveAnswerToCurrentFC","answeredFCId","responseTime","meta","id","response_time","direction","options","option_ids","getFlashcard","reject","defer","_resolvePromise","promise","preloadFlashcards","_loadFlashcards","getFCQueue","getAnswerQueue","getSummary","limit","min","avoid","fc","Array","JSON","stringify","without_contexts","params","request_in_set","concat","_loadContexts","context_id","context","shift","configServiceMock","proso_flashcards","practice","test","app_name","default_value","$practiceService","$timeout","generate_flashcards","$provide","whenGET","RegExp","flashcard","toHaveBeenCalledWith","handler2","language","generate_full_flashcards","same_id","content","fc2","lang","object_type","item_id","expectPOST","x","spyOn","and","callFake","$userService","test_user","profile","send_emails","public","username","first_name","last_name","test_user_profile","user","test_signup_data","password","password_check","error_type","status","logged","loading","loadUser","logout","toBeTruthy","toBeFalsy","signup","objectContaining","signupParams","processUser","login","loadSession","session","updateProfile","updateSession","update","sessionUpdated","init","_resetError","_processUser","pass","pass2","firstName","lastName","clearObj","prop","loadUserFromJS","scope","locale","window","navigator","userLanguage","browserLanguage","display_height","innerHeight","display_width","innerWidth","time_zone","jstz","determine","err","loginGoogle","_openPopup","loginFacebook","next","settings","run","$templateCache"],"mappings":"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","sourcesContent":["var configServiceLoaded;\nif (configServiceLoaded){\n    throw \"ConfigService already loaded\";\n}\nconfigServiceLoaded = true;\n\nfunction obj2get(obj, prefix, ignore_prefix_keys){\n    var str = \"\";\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (str !== \"\") {\n                str += \"&\";\n            }\n            if (ignore_prefix_keys.indexOf(key) === -1){\n                str += prefix;\n            }\n            str += key + \"=\" + encodeURIComponent(obj[key]);\n        }\n    }\n    return str;\n}\n\nvar m = angular.module('proso.apps.common-config', ['ngCookies']);\n\nm.factory(\"configService\", [\"$http\", \"$window\", \"$cookieStore\", function($http, $window, $cookieStore){\n    if (!!$window.configService){\n        return $window.configService;\n    }\n\n    var self = this;\n    var config = null;\n\n    self.getConfig = function (appName, key, defaultValue) {\n        var variable = null;\n        if (typeof overridden[appName + \".\" + key] !== 'undefined') {\n            variable = overridden[appName + \".\" + key];\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"overridden\", variable);\n            }\n            return variable;\n        }\n\n        if (config === null) {\n            console.error(\"Config not loaded\");\n            return;\n        }\n\n        variable = config[appName];\n        var path = key.split(\".\");\n        for (var i = 0; i < path.length; i++) {\n            if (typeof variable === 'undefined') {\n                if (self.isDebug()) {\n                    console.log(appName + \".\" + key, \"use default\", defaultValue);\n                }\n                return defaultValue;\n            }\n            variable = variable[path[i]];\n        }\n        if (typeof variable === 'undefined') {\n            if (self.isDebug()) {\n                console.log(appName + \".\" + key, \"use default\", defaultValue);\n            }\n            return defaultValue;\n        }\n        if (self.isDebug()) {\n            console.log(appName + \".\" + key, \"from config\", variable);\n        }\n        return variable;\n    };\n\n    self.isDebug = function() {\n        return overridden.debug === true;\n    };\n\n    self.loadConfig = function () {\n        return $http.get(\"/common/config/\")\n            .success(function (response) {\n                self.processConfig(response.data);\n            })\n            .error(function () {\n                console.error(\"Problem while loading config from server\");\n            });\n    };\n\n    self.processConfig = function (data) {\n        config = angular.copy(data);\n    };\n\n    self.override = function (key, value) {\n        if (value === 'true') {\n            value = true;\n        } else if (value === 'false') {\n            value = false;\n        } else if ($.isNumeric(value)) {\n            value = parseFloat(value);\n        }\n        overridden[key] = value;\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.removeOverridden = function (key) {\n        delete overridden[key];\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.resetOverridden = function () {\n        overridden = {};\n        $cookieStore.put(\"configService:overridden\", overridden);\n    };\n\n    self.getOverridden = function () {\n        return angular.copy(overridden);\n    };\n\n    var overridden = $cookieStore.get(\"configService:overridden\") || {};\n    $window.configService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var configService;\n    $httpProvider.interceptors.push(function($injector){\n        return {\n            request: function(config){\n                if (!$injector.has('configService')) {\n                    console.log('There is no configuration service available.');\n                    return config;\n                }\n                configService = configService || $injector.get(\"configService\");\n                if (config.url.split(\"?\")[0].match(/\\.\\w+$/) !== null){\n                    return config;\n                }\n                var overridden = obj2get(configService.getOverridden(), \"config.\", [\"user\", \"time\", \"debug\"]);\n                if (overridden === \"\"){\n                    return config;\n                }\n                config.url += config.url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n                config.url += overridden;\n                return config;\n            }\n        };\n    });\n}]);\n\n","var config = {\n    A: {\n        a: 10,\n        b: {\n            c: {\n                d: 42\n            },\n            e: 11\n        },\n        f: 53\n    },\n    B: {\n    }\n};\n\ndescribe(\"Config Service\", function() {\n    var $httpBackend, $configService;\n\n    beforeEach(module('proso.apps.common-config', \"ngCookies\"));\n\n    beforeEach(inject(function($injector) {\n        $httpBackend = $injector.get('$httpBackend');\n        $configService = $injector.get('configService');\n    }));\n\n    beforeEach(inject(function($window){\n        $window.configService = null;\n    }));\n\n    afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n    });\n\n\n    it(\"should provide interface\", function(){\n        expect($configService.getConfig).toBeDefined();\n        expect($configService.processConfig).toBeDefined();\n        expect($configService.loadConfig).toBeDefined();\n    });\n\n    it(\"should use processed config\", function(){\n        $configService.processConfig(config);\n        expect($configService.getConfig(\"A\", \"b\")).toEqual(config.A.b);\n    });\n\n    it(\"should copy processed config\", function(){\n        $configService.processConfig(config);\n        expect($configService.getConfig(\"A\", \"b\")).not.toBe(config.A.b);\n    });\n\n    it(\"should access nested vars\", function(){\n        $configService.processConfig(config);\n        expect($configService.getConfig(\"A\", \"a\")).toEqual(10);\n        expect($configService.getConfig(\"A\", \"f\")).toEqual(53);\n        expect($configService.getConfig(\"A\", \"b.e\")).toEqual(11);\n        expect($configService.getConfig(\"A\", \"b.c.d\")).toEqual(42);\n    });\n\n    it(\"should return unknown for vars not in config\", function(){\n        $configService.processConfig(config);\n        expect($configService.getConfig(\"A\", \"x\")).not.toBeDefined();\n        expect($configService.getConfig(\"A\", \"x.y\")).not.toBeDefined();\n        expect($configService.getConfig(\"A\", \"b.c.e\")).not.toBeDefined();\n        expect($configService.getConfig(\"A\", \"\")).not.toBeDefined();\n        expect($configService.getConfig(\"C\", \"a\")).not.toBeDefined();\n    });\n\n    it(\"should return default value for vars not in config\", function(){\n        $configService.processConfig(config);\n        expect($configService.getConfig(\"A\", \"x\", 61)).toBe(61);\n        expect($configService.getConfig(\"A\", \"x.y\", 62)).toBe(62);\n        expect($configService.getConfig(\"A\", \"b.c.e\", 63)).toBe(63);\n        expect($configService.getConfig(\"A\", \"\", 64)).toBe(64);\n        expect($configService.getConfig(\"C\", \"a\", 65)).toBe(65);\n    });\n\n    it(\"should load config\", function() {\n        $httpBackend.expectGET(\"/common/config/\").respond({data: config});\n        $configService.loadConfig();\n        $httpBackend.flush();\n\n        expect($configService.getConfig(\"A\", \"b\")).toEqual(config.A.b);\n    });\n\n    it(\"should load config and return promise\", function() {\n        var handler = jasmine.createSpy('success');\n        $httpBackend.expectGET(\"/common/config/\").respond({data: config});\n        $configService.loadConfig().then(handler);\n        expect(handler).not.toHaveBeenCalled();\n        $httpBackend.flush();\n        expect(handler).toHaveBeenCalled();\n    });\n});\n","var loggingServiceLoaded;\nif (loggingServiceLoaded){\n    throw \"LoggingService already loaded\";\n}\nloggingServiceLoaded = true;\n\nvar m = angular.module('proso.apps.common-logging', []);\n\nm.factory(\"loggingService\", [\"$window\", function($window) {\n    if (!!$window.loggingService){\n        return $window.loggingService;\n    }\n\n    var self = this;\n    var debugLog = [];\n    var debugLogListeners = [];\n\n    self.getDebugLog = function() {\n        return debugLog;\n    };\n\n    self.extendDebugLog = function(url, events) {\n        events.forEach(function(e) {\n            e.url = url;\n            debugLog.push(e);\n        });\n        debugLogListeners.forEach(function(listener) {\n            listener(events);\n        });\n    };\n\n    self.addDebugLogListener = function(listener) {\n        debugLogListeners.push(listener);\n    };\n\n    $window.loggingService = self;\n    return self;\n}]);\n\nm.config(['$httpProvider', function($httpProvider) {\n    var loggingService;\n    $httpProvider.interceptors.push(function($injector) {\n        return {\n            response: function(response) {\n                loggingService = loggingService || $injector.get(\"loggingService\");\n                if (response.data instanceof Object && 'debug_log' in response.data) {\n                    loggingService.extendDebugLog(response.config.url, response.data.debug_log);\n                }\n                return response;\n            }\n        };\n    });\n}]);\n","var m = angular.module('proso.apps.common-toolbar', ['ngCookies', 'proso.apps.common-config']);\n\nm.controller(\"ToolbarController\", function($scope, $cookies, configService, loggingService) {\n    $scope.override = configService.override;\n    $scope.removeOverridden = configService.removeOverridden;\n    $scope.date = new Date();\n    $scope.debugLog = [];\n    $scope.opened = $cookies[\"toolbar:opened\"] === \"true\";\n    $scope.loggingOpened = true;\n    $scope.override('debug', true);\n    $scope.overridden = configService.getOverridden();\n    loggingService.addDebugLogListener(function(events) {\n        $scope.$apply(function(){\n            events.forEach(function (e) {\n                $scope.debugLog.unshift(e);\n            });\n        });\n    });\n\n    $scope.$watch(\"opened\", function(n, o){\n        $cookies[\"toolbar:opened\"] = n;\n    });\n\n    $scope.addToOverride = function(name) {\n        if (!name) {\n            return;\n        }\n        configService.override(name, '');\n    };\n\n    $scope.getOverridden = function() {\n        var overridden = configService.getOverridden();\n        Object.keys(overridden).filter(function(k) {\n            return (k === 'user' || k === 'debug' || k === 'time');\n        }).forEach(function (k) {\n            delete overridden[k];\n        });\n        return overridden;\n    };\n\n});\n\nm.directive('toolbar', [function () {\n    return {\n        restrict: 'E',\n        controller: 'ToolbarController',\n        templateUrl: 'templates/common-toolbar/toolbar.html'\n    };\n}]);\n","var m = angular.module('proso.apps.feedback-comment', ['ui.bootstrap', 'proso.apps.gettext']);\n\nm.directive('feedbackComment', ['$modal', '$window', 'gettext', function ($modal, $window, gettext) {\n    return {\n        restrict: 'E',\n        template: ['<div id=\"feedback\">',\n                   '<a href=\"\" class=\"btn btn-primary\" ng-click=\"openFeedback()\">',\n                   gettext('Write to us'),\n                   '</a>',\n                   '</div>'].join('\\n'),\n\n        link: function ($scope, element, attrs) {\n            $scope.feedback = {\n                email: '@',\n                text: '',\n            };\n\n            $scope.openFeedback = function () {\n                if (attrs.email) {\n                    $scope.feedback.email = attrs.email;\n                }\n\n                $modal.open({\n                    templateUrl: 'templates/feedback-comment/comment.html',\n                    controller: ModalFeedbackCtrl,\n                    size: 'lg',\n                    resolve: {\n                        feedback: function () {\n                            return $scope.feedback;\n                        }\n                    }\n                });\n            };\n\n            var ModalFeedbackCtrl = ['$scope', '$modalInstance', '$http', '$cookies', '$location', 'feedback', 'gettext',\n                function ($scope, $modalInstance, $http, $cookies, $location, feedback, gettext) {\n\n                $scope.feedback = feedback;\n                $scope.alerts = [];\n\n                $scope.send = function() {\n                    feedback.page = $location.absUrl();\n                    $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n                    $http.post('/feedback/', feedback).success(function(data){\n                        $scope.alerts.push({\n                            type : 'success',\n                            msg : gettext('Feedback jsme přijali. Děkujeme Vám za zaslané informace. Feedback od uživatelů je k nezaplacení.'),\n                        });\n                        $scope.sending = false;\n                        feedback.text = '';\n                    }).error(function(){\n                        $scope.alerts.push({\n                            type : 'danger',\n                            msg : gettext(\"Something wrong has happened.\"),\n                        });\n                        $scope.sending = false;\n                    });\n                    $scope.sending = true;\n                };\n\n                $scope.closeAlert = function(index) {\n                    $scope.alerts.splice(index, 1);\n                };\n\n                $scope.cancel = function () {\n                    $modalInstance.dismiss('cancel');\n                };\n            }];\n        }\n    };\n}]);\n","var dummy;\n","var m = angular.module('proso.apps.demo');\n\nm.controller('RatingModalControllerDemo', ['$rootScope', '$scope', function($scope, $rootScope) {\n    $scope.openRating = function() {\n        $rootScope.$emit('openRatingModal', []);\n    };\n}]);\n","var m = angular.module('proso.apps.feedback-rating', ['ui.bootstrap', 'proso.apps.gettext']);\n\nm.controller('RatingModalController', ['$scope', '$rootScope', '$modal', function ($scope, $rootScope, $modal) {\n\n    $scope.open = function() {\n        if ($scope.email) {\n            $scope.feedback.email = $scope.email;\n        }\n\n        $modal.open({\n            templateUrl: 'templates/feedback-rating/rating.html',\n            controller: 'RatingModalInstanceController',\n            size: 'lg',\n            resolve: {\n                feedback: function () {\n                    return $scope.feedback;\n                }\n            }\n        });\n    };\n\n    $rootScope.$on('openRatingModal', function(event, args) {\n        $scope.open();\n    });\n}]);\n\nm.controller('RatingModalInstanceController', ['$scope', '$modalInstance', '$http', '$cookies', 'gettext', function($scope, $modalInstance, $http, $cookies, gettext) {\n\n    $scope.alerts = [];\n\n    $scope.vote = function(answer) {\n        $scope.answer = answer;\n        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n        $http.post('/feedback/rating', {'value': answer}).success(function(data){\n            $scope.alerts.push({\n                type : 'success',\n                msg : gettext('Thank you for your rating.'),\n            });\n            $scope.sending = false;\n        }).error(function(){\n            $scope.alerts.push({\n                type : 'danger',\n                msg : gettext(\"Something wrong has happened.\"),\n            });\n            $scope.sending = false;\n        });\n        $scope.sending = true;\n    };\n\n    $scope.closeAlert = function(index) {\n        $scope.alerts.splice(index, 1);\n        $modalInstance.dismiss('cancel');\n    };\n    $scope.cancel = function() {\n        $modalInstance.dismiss('cancel');\n    };\n}]);\n\nm.directive('ratingModal', ['$window', function ($window) {\n    return {\n        restrict: 'E',\n        controller: 'RatingModalController',\n    };\n}]);\n\n","var m = angular.module('proso.apps.flashcards-practice', ['ngCookies', 'proso.apps.common-config']);\nm.service(\"practiceService\", [\"$http\", \"$q\", \"configService\", \"$cookies\", function($http, $q, configService, $cookies){\n    var self = this;\n\n    var queue = [];\n    var deferredFC = null;\n    var promiseResolvedTmp = false;\n    var currentFC = null;\n    var answerQueue = [];\n\n    var config = {};\n    var current = 0;\n    var setId = 0;\n    var summary = {};\n\n    var contexts = {};\n\n    // called on create and set reset\n    self.initSet = function(configName){\n        var key = \"practice.\" + configName + \".\";\n        config.set_length = configService.getConfig(\"proso_flashcards\", key + \"set_length\", 10);\n        config.fc_queue_size_max = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_max\", 1);\n        config.fc_queue_size_min = configService.getConfig(\"proso_flashcards\", key + \"fc_queue_size_min\", 1);\n        config.save_answer_immediately = configService.getConfig(\"proso_flashcards\", key + \"save_answer_immediately\", false);\n        config.cache_context = configService.getConfig(\"proso_flashcards\", key + \"cache_context\", false);\n\n        self.setFilter({});\n        current = 0;\n        self.flushAnswerQueue();\n        self.clearQueue();\n        deferredFC = null;\n        setId++;\n        summary = {\n            flashcards: [],\n            answers: [],\n            correct: 0,\n            count: 0\n        };\n    };\n\n    self.setFilter = function(filter){\n        config.filter = {\n            contexts: [],\n            categories: [],\n            types: []\n        };\n        angular.extend(config.filter, filter);\n    };\n\n    self.getCurrent = function(){\n        return current;\n    };\n\n    self.getConfig = function(){\n        return angular.copy(config);\n    };\n\n    // add answer to queue and upload queued answers if necessary\n    self.saveAnswer = function(answer, farceSave){\n        if (answer) {\n            answer.time = Date.now();\n            answerQueue.push(answer);\n            summary.answers.push(answer);\n            summary.count++;\n            if (answer.flashcard_id === answer.flashcard_answered_id) {\n                summary.correct++;\n            }\n        }\n\n        if (config.save_answer_immediately || farceSave || current >= config.set_length) {\n            if (answerQueue.length > 0) {\n                answerQueue.forEach(function(answer){\n                    answer.time_gap = Math.round((Date.now() - answer.time) / 1000);\n                    delete answer.time;\n                });\n                $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n                $http.post(\"/flashcards/answer/\", {answers: answerQueue})\n                    .error(function (response) {\n                        console.error(\"Problem while uploading answer\", response);\n                    });\n                answerQueue = [];\n            }\n        }\n    };\n\n    self.flushAnswerQueue = function(){\n        self.saveAnswer(null, true);\n    };\n\n    // build answer from current FC and save\n    self.saveAnswerToCurrentFC = function(answeredFCId, responseTime, meta){\n        if (!currentFC) {\n            console.error(\"There is no current flashcard\");\n            return;\n        }\n        var answer = {\n            flashcard_id: currentFC.id,\n            flashcard_answered_id: answeredFCId,\n            response_time: responseTime,\n            direction: currentFC.direction\n        };\n        if (meta) {\n            answer.meta = meta;\n        }\n        if (currentFC.options){\n            answer.option_ids = [];\n            currentFC.options.forEach(function(o){\n                if (o.id !== currentFC.id) {\n                    answer.option_ids.push(o.id);\n                }\n            });\n        }\n        self.saveAnswer(answer);\n    };\n\n    // return promise of flashcard\n    self.getFlashcard = function(){\n        if(deferredFC){\n            return $q(function(resolve, reject){\n                reject(\"Already one flashcard promised\");\n            });\n        }\n        deferredFC  = $q.defer();\n        promiseResolvedTmp = false;\n        _resolvePromise();\n        deferredFC.promise.then(function(){ deferredFC = null;}, function(){ deferredFC = null;});\n        return deferredFC.promise;\n    };\n\n    self.clearQueue = function(){\n        queue = [];\n    };\n\n    // preload flashcards\n    self.preloadFlashcards = function(){\n        _loadFlashcards();\n    };\n\n    self.getFCQueue = function(){\n        return queue;\n    };\n\n    self.getAnswerQueue = function(){\n        return answerQueue;\n    };\n\n    self.getSummary = function(){\n        return summary;\n    };\n\n\n    var _loadFlashcards = function(){\n        if (queue.length >= config.fc_queue_size_min) { return; }                                       // if there are some FC queued\n            config.filter.limit  = config.fc_queue_size_max - queue.length;\n        if (deferredFC && !promiseResolvedTmp) { config.filter.limit ++; }                  // if we promised one flashcard\n        config.filter.limit = Math.min(config.filter.limit, config.set_length - current - queue.length);  // check size of set\n        if (config.filter.limit === 0) {return;}                         // nothing to do\n        config.filter.avoid = currentFC ? [currentFC.id] : [];      // avoid current FC\n        queue.forEach(function(fc){\n            config.filter.avoid.push(fc.id);\n        });\n\n        var filter = {};\n        for (var key in config.filter){\n            if (config.filter[key] instanceof Array) {\n                filter[key] = JSON.stringify(config.filter[key]);\n            }else{\n                filter[key] = config.filter[key];\n            }\n        }\n        if (config.cache_context){\n            filter.without_contexts = 1;\n        }\n\n        var request;\n        if (answerQueue.length === 0) {\n            request = $http.get(\"/flashcards/practice/\", {params: filter});\n        }else{\n            $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;\n            request = $http.post(\"/flashcards/practice/\", {answers: answerQueue}, {params: filter});\n            answerQueue = [];\n        }\n        var request_in_set = setId;\n        request\n            .success(function(response){\n                if (request_in_set !== setId) {\n                    return;\n                }\n                queue = queue.concat(response.data.flashcards);\n                _loadContexts();\n                if (queue.length > 0) {\n                    _resolvePromise();\n                }\n                else{\n                    console.error(\"No Flashcards to practice\");\n                }\n            })\n            .error(function (response) {\n                if (deferredFC !== null){\n                    deferredFC.reject(\"Something went wrong while loading flashcards from backend.\");\n                }\n                console.error(\"Something went wrong while loading flashcards from backend.\");\n            });\n\n    };\n\n    var _loadContexts = function(){\n        if (config.cache_context){\n            queue.forEach(function(fc){\n                if (fc.context_id in contexts){\n                    if (contexts[fc.context_id] !== \"loading\"){\n                        fc.context = contexts[fc.context_id];\n                    }\n                }else{\n                    contexts[fc.context_id] = \"loading\";\n                    $http.get(\"/flashcards/context/\" + fc.context_id)\n                        .success(function(response){\n                            contexts[fc.context_id] = response.data;\n                            _resolvePromise();\n                        }).error(function(){\n                            delete contexts[fc.context_id];\n                            console.error(\"Error while loading context from backend\");\n                        });\n                }\n            });\n        }\n    };\n\n    var _resolvePromise = function(){\n        if (deferredFC === null){\n            return;\n        }\n        if (config.set_length === current){\n            deferredFC.reject(\"Set was completed\");\n            return;\n        }\n        if (queue.length > 0) {\n            if (config.cache_context){\n                if (typeof contexts[queue[0].context_id]  === 'object'){\n                    queue[0].context = contexts[queue[0].context_id];\n                }else{\n                    return;\n                }\n            }\n            currentFC = queue.shift();\n            current++;\n            promiseResolvedTmp = true;\n            summary.flashcards.push(currentFC);\n            deferredFC.resolve(currentFC);\n        }\n        _loadFlashcards();\n    };\n}]);\n","var config;\nvar configServiceMock = function(){\n    var self = this;\n    config = {\"proso_flashcards\": { \"practice\": {\"test\": {\n        \"set_length\": 10,\n        \"fc_queue_size_max\": 1,\n        \"fc_queue_size_min\": 1,\n        \"save_answer_immediately\": false,\n        \"cache_context\": false\n    }}}};\n\n    self.getConfig = function(app_name, key, default_value){\n        if (config === null){\n            console.error(\"Config not loaded\");\n            return;\n        }\n\n        var variable = config[app_name];\n        var path =  key.split(\".\");\n        for (var i=0; i < path.length; i++){\n            variable = variable[path[i]];\n            if (typeof variable === 'undefined'){ return default_value; }\n        }\n        return variable;\n    };\n\n    self.getOverridden = function () {\n        return {};\n    };\n};\n\ndescribe(\"Practice Service - flashcards\", function() {\n    var $httpBackend, $practiceService, $timeout;\n\n    var generate_flashcards = function(limit){\n        var flashcards = [];\n        for (var i = 0; i < limit; i++){\n            flashcards.push(i);\n        }\n        return flashcards;\n    };\n\n    beforeEach(module('proso.apps.flashcards-practice', \"ngCookies\"));\n\n    beforeEach(module(function ($provide) { $provide.service(\"configService\", configServiceMock); }));\n\n    beforeEach(inject(function($injector) {\n\n        $httpBackend = $injector.get('$httpBackend');\n        $timeout = $injector.get(\"$timeout\");\n        $practiceService = $injector.get('practiceService');\n    }));\n\n    beforeEach(function(){\n        for (var limit = 1; limit <=10; limit++){\n            $httpBackend.whenGET(new RegExp(\"\\/flashcards\\/practice\\/?.*limit=\"+limit+\"&.*\"))\n                .respond(200, {data: {flashcards: generate_flashcards(limit)}});\n        }\n        $practiceService.initSet(\"test\");\n    });\n\n    afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n    });\n\n\n    it(\"should provide interface\", function(){\n        expect($practiceService.getCurrent).toBeDefined();\n        expect($practiceService.initSet).toBeDefined();\n        expect($practiceService.setFilter).toBeDefined();\n        expect($practiceService.saveAnswer).toBeDefined();\n        expect($practiceService.saveAnswerToCurrentFC).toBeDefined();\n        expect($practiceService.flushAnswerQueue).toBeDefined();\n        expect($practiceService.getFlashcard).toBeDefined();\n        expect($practiceService.getSummary).toBeDefined();\n    });\n\n    it(\"getting first flashcard\", function(){\n\n        $practiceService.getFlashcard().then(function(flashcard){\n            expect(flashcard).toBe(0);\n        });\n        $httpBackend.flush();\n    });\n\n    it(\"fc_queue_size_max should change limit of loaded FC\", function(){\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*limit=2.*\"))\n                .respond(200, {data: {flashcards: generate_flashcards(2)}});\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n\n        config.proso_flashcards.practice.test.fc_queue_size_max = 5;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*limit=6.*\"))\n                .respond(200, {data: {flashcards: generate_flashcards(6)}});\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n\n        config.proso_flashcards.practice.test.set_length = config.proso_flashcards.practice.test.fc_queue_size_max = 10;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*limit=10.*\"))\n                .respond(200, {data: {flashcards: generate_flashcards(10)}});\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n\n        expect(true).toBe(true);\n    });\n\n    it(\"getting more flashcards\", function(){\n        var handler = jasmine.createSpy('success');\n        config.proso_flashcards.practice.test.fc_queue_size_max = 4;\n        config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n\n        $practiceService.getFlashcard().then(handler);\n        $httpBackend.flush();\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(0);\n\n        $practiceService.getFlashcard().then(handler);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(1);\n\n        $practiceService.getFlashcard().then(handler);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(2);\n\n        $practiceService.getFlashcard().then(handler);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(3);\n\n        $practiceService.getFlashcard().then(handler);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(4);\n    });\n\n    it(\"getting more flashcards when not loaded yet\", function(){\n        var handler = jasmine.createSpy('success');\n        var handler2 = jasmine.createSpy('error');\n        $practiceService.fc_queue_size_max = 0;\n\n        $practiceService.getFlashcard().then(handler);\n        $practiceService.getFlashcard().then(handler, handler2);\n        $timeout.flush();\n        $httpBackend.flush();\n        expect(handler).toHaveBeenCalledWith(0);\n        expect(handler2).toHaveBeenCalled();\n        expect(handler).not.toHaveBeenCalledWith(1);\n\n    });\n\n    it(\"reject get more FC than length\", function(){\n        var handler = jasmine.createSpy('success');\n        var handler2 = jasmine.createSpy('error');\n        config.proso_flashcards.practice.test.fc_queue_size_max = 10;\n        config.proso_flashcards.practice.test.set_length = 3;\n        $practiceService.initSet(\"test\");\n\n        $practiceService.getFlashcard().then(handler, handler2);\n        $httpBackend.flush();\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(0);\n\n        $practiceService.getFlashcard().then(handler, handler2);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(1);\n\n        $practiceService.getFlashcard().then(handler, handler2);\n        $timeout.flush();\n        expect(handler).toHaveBeenCalledWith(2);\n\n        expect(handler2).not.toHaveBeenCalled();\n        $practiceService.getFlashcard().then(handler, handler2);\n        $timeout.flush();\n        expect(handler2).toHaveBeenCalled();\n\n    });\n\n    it(\"current counter\", function(){\n        config.proso_flashcards.practice.test.set_length = 3;\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.fc_queue_size_min = 1;\n        $practiceService.initSet(\"test\");\n        expect($practiceService.getCurrent()).toBe(0);\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        expect($practiceService.getCurrent()).toBe(1);\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        expect($practiceService.getCurrent()).toBe(2);\n        $practiceService.getFlashcard();\n        expect($practiceService.getCurrent()).toBe(3);\n        $practiceService.getFlashcard();\n        expect($practiceService.getCurrent()).toBe(3);\n\n    });\n\n    it(\"should work with empty flashcard list returned from server\", function(){\n        $httpBackend.expectGET(/\\/flashcards\\/practice\\/?.*/).respond(200, {data: {flashcards: []}});\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        expect($practiceService.getCurrent()).toBe(0);\n    });\n\n    it(\"queue length\", function() {\n        for (var size = 1; size <= 10; size++) {\n            config.proso_flashcards.practice.test.fc_queue_size_max = size;\n            $practiceService.initSet(\"test\");\n            $practiceService.preloadFlashcards();\n            $httpBackend.flush();\n            expect($practiceService.getFCQueue().length).toBe(size);\n        }\n\n    });\n\n    it(\"use of filter parameters\", function(){\n        var filter = {};\n        filter.types = [\"cosi\", \"kdesi\"];\n        filter.contexts = [71, 72, 33];\n        filter.categories = [15, 16];\n        filter.language= \"xx\";\n        $practiceService.setFilter(filter);\n\n        $httpBackend.expectGET(/\\/flashcards\\/practice\\/\\?.*categories=%5B15,16%5D.*contexts=%5B71,72,33%5D.*language=xx.*types=%5B%22cosi%22,%22kdesi%22%5D.*/).respond(200, {data: generate_flashcards(1)});\n        $practiceService.preloadFlashcards();\n        $httpBackend.flush();\n\n        expect($practiceService.getCurrent()).toBe(0);\n    });\n\n    it(\"avoid already loaded flashcards\", function(){\n        $httpBackend.expectGET(/\\/flashcards\\/practice\\/?.*/).respond(200, {data: {flashcards: [\n            {id: 41}, {id: 42},{id: 43}\n        ]}});\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.fc_queue_size_min = 3;\n        $practiceService.initSet(\"test\");\n        $practiceService.preloadFlashcards();\n        $httpBackend.flush();\n\n        $httpBackend.expectGET(/\\/flashcards\\/practice\\/?.*41,42,43.*/);\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $httpBackend.flush();\n\n        expect($practiceService.getCurrent()).toBe(1);\n    });\n\n    it(\"should drop incoming FC after starting new set\", function(){\n        $practiceService.preloadFlashcards();\n        $practiceService.initSet(\"test\");\n        $httpBackend.flush();\n        expect($practiceService.getFCQueue().length).toBe(0);\n    });\n\n    var generate_full_flashcards = function(limit, without_contexts, same_id){\n        var flashcards = [];\n        for (var i = 1; i <= limit; i++){\n            var id = same_id ? 1 : i;\n            var fc = {\n                \"context_id\": id\n            };\n            if (!without_contexts) {\n                fc.context = {id: id, content: 42};\n            }\n            flashcards.push(fc);\n        }\n        return flashcards;\n    };\n\n    it(\"if cache context - still return question with context\", function(){\n        config.proso_flashcards.practice.test.cache_context = true;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*without_contexts.*\"))\n                .respond(200, {data: {flashcards: generate_full_flashcards(2, true, true)}});\n        $httpBackend.expectGET(\"/flashcards/context/1\").respond({data: {id: 1, content: 42}});\n\n        var fc;\n        $practiceService.getFlashcard().then(function(d){fc = d;});\n        $httpBackend.flush();\n        $timeout.flush();\n\n        expect(fc.context).toBeDefined();\n    });\n\n    it(\"if cache context - context should have correct id\", function(){\n        config.proso_flashcards.practice.test.cache_context = true;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*without_contexts.*\"))\n            .respond(200, {data: {flashcards: generate_full_flashcards(2, true, true)}});\n        $httpBackend.expectGET(\"/flashcards/context/1\").respond({data: {id: 1, content: 42}});\n\n        var fc;\n        $practiceService.getFlashcard().then(function(d){fc = d;});\n        $httpBackend.flush();\n        $timeout.flush();\n\n        expect(fc.context.id).toBe(fc.context_id);\n    });\n\n    it(\"if cache context - should load context separately\", function(){\n        config.proso_flashcards.practice.test.cache_context = true;\n        config.proso_flashcards.practice.test.set_length = 2;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*without_contexts.*\"))\n            .respond(200, {data: {flashcards: generate_full_flashcards(2, true)}});\n        $httpBackend.expectGET(\"/flashcards/context/1\").respond({data: {id: 1, content: 42}});\n        $httpBackend.expectGET(\"/flashcards/context/2\").respond({data: {id: 2, content: 42}});\n\n        var fc;\n        $practiceService.getFlashcard().then(function(d){fc = d;});\n        $httpBackend.flush();\n        $timeout.flush();\n        expect(fc.context.id).toBe(fc.context_id);\n\n        $practiceService.getFlashcard().then(function(d){fc = d;});\n        $timeout.flush();\n        expect(fc.context.id).toBe(fc.context_id);\n    });\n\n    it(\"if cache context - should load context only once\", function(){\n        config.proso_flashcards.practice.test.cache_context = true;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectGET(new RegExp(\"\\/flashcards\\/practice\\/?.*without_contexts.*\"))\n            .respond(200, {data: {flashcards: generate_full_flashcards(10, true, true)}});\n        $httpBackend.expectGET(\"/flashcards/context/1\").respond({data: {id: 1, content: 42}});\n\n        var fc, fc2;\n        $practiceService.getFlashcard().then(function(d){fc = d;});\n        $httpBackend.flush();\n        $timeout.flush();\n        expect(fc.context.id).toBe(fc.context_id);\n\n        $practiceService.getFlashcard().then(function(d){fc2 = d;});\n        $timeout.flush();\n        expect(fc.context.id).toBe(fc.context_id);\n\n        expect(fc).not.toBe(fc2);\n        expect(fc.context).toBe(fc2.context);\n    });\n\n    it(\"if not cache context - should not load context\", function(){\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        $timeout.flush();\n\n        expect(true).toBe(true);\n    });\n});\n\ndescribe(\"Practice Service - answers\", function() {\n    var $httpBackend, $practiceService, $timeout;\n\n    var generate_flashcards = function(limit){\n        var flashcards = [];\n        for (var i = 0; i < limit; i++){\n            flashcards.push({\n                \"lang\": \"en\",\n                \"object_type\": \"fc_flashcard\",\n                \"direction\": \"xxxs\",\n                \"item_id\": 12,\n                \"id\": i\n            });\n        }\n        return flashcards;\n    };\n\n\n    beforeEach(module('proso.apps.flashcards-practice', \"ngCookies\"));\n    beforeEach(module(function ($provide) { $provide.service(\"configService\", configServiceMock); }));\n\n    beforeEach(inject(function($injector) {\n\n        $httpBackend = $injector.get('$httpBackend');\n        $timeout = $injector.get(\"$timeout\");\n        $practiceService = $injector.get('practiceService');\n    }));\n\n    beforeEach(function(){\n        for (var limit = 1; limit <=10; limit++){\n            $httpBackend.whenGET(new RegExp(\"\\/flashcards\\/practice\\/?.*limit=\"+limit+\"&.*\"))\n                .respond(200, {data: {flashcards: generate_flashcards(limit)}});\n        }\n        $practiceService.initSet(\"test\");\n    });\n\n    afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n    });\n\n\n    it(\"flush answer queue\", function() {\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n        $practiceService.saveAnswer(1);\n        $practiceService.saveAnswer(2);\n        $practiceService.saveAnswer(3);\n        expect($practiceService.getAnswerQueue()).toEqual([1,2,3]);\n\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {answers: [1,2,3]}).respond(200, \"OK\");\n        $practiceService.flushAnswerQueue();\n        $httpBackend.flush();\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {answers: [1]}).respond(200, \"OK\");\n        $practiceService.saveAnswer(1, true);\n        $httpBackend.flush();\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n    });\n\n\n    it(\"save answer immediately\", function() {\n        config.proso_flashcards.practice.test.save_answer_immediately = true;\n        $practiceService.initSet(\"test\");\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {answers: [1]}).respond(200, \"OK\");\n        $practiceService.saveAnswer(1);\n        $httpBackend.flush();\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n\n        config.proso_flashcards.practice.test.save_answer_immediately = false;\n        $practiceService.initSet(\"test\");\n        $practiceService.saveAnswer(1);\n        expect($practiceService.getAnswerQueue()).toEqual([1]);\n    });\n\n    it(\"save answer with getting FC\", function() {\n        $httpBackend.expectPOST(/\\/flashcards\\/practice\\/?.*/, {answers: [1, 2, 3]})\n            .respond(200, {data: generate_flashcards(1)});\n        $practiceService.saveAnswer(1);\n        $practiceService.saveAnswer(2);\n        $practiceService.saveAnswer(3);\n        $practiceService.preloadFlashcards();\n        $httpBackend.flush();\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n    });\n\n    it(\"save answer at the end of set\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n        for (var i = 1; i < 5; i++){\n            $practiceService.getFlashcard();\n            if (i === 1){\n                $httpBackend.flush();\n            }\n            $timeout.flush();\n            $practiceService.saveAnswer(i);\n        }\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {answers: [1, 2, 3, 4, 5]}).respond(200, \"OK\");\n        $practiceService.getFlashcard();\n        $practiceService.saveAnswer(i);\n        $httpBackend.flush();\n\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n    });\n\n    it(\"save answer to current flashcard\", function() {\n        config.proso_flashcards.practice.test.save_answer_immediately = true;\n        $practiceService.initSet(\"test\");\n\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {\"answers\":[{\"flashcard_id\":0,\"flashcard_answered_id\":42,\"response_time\":42000,\"direction\":\"xxxs\",\"meta\":\"moje meta\", time_gap:0}]}).respond(200, \"OK\");\n        $practiceService.saveAnswerToCurrentFC(42, 42000, \"moje meta\");\n        $httpBackend.flush();\n\n        $practiceService.getFlashcard();\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {\"answers\":[{\"flashcard_id\":1,\"flashcard_answered_id\":null,\"response_time\":12,\"direction\":\"xxxs\",\"meta\":\"moje meta\", time_gap:0}]}).respond(200, \"OK\");\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        $httpBackend.flush();\n\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n    });\n\n    it(\"save answer to current flashcard without flashcard\", function() {\n        config.proso_flashcards.practice.test.save_answer_immediately = true;\n        $practiceService.initSet(\"test\");\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        expect($practiceService.getAnswerQueue()).toEqual([]);\n    });\n\n    it(\"questions in summary\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        $timeout.flush();\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.getFlashcard();\n        $timeout.flush();\n\n        expect($practiceService.getSummary().flashcards).toEqual(generate_flashcards(3));\n     });\n\n    it(\"answers in summary\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(1, 32, \"moje meta\");\n\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.saveAnswer(123);\n\n        var answers = $practiceService.getSummary().answers;\n        expect(answers[0].response_time).toBe(12);\n        expect(answers[0].flashcard_answered_id).toBe(null);\n        expect(answers[1].flashcard_answered_id).toBe(1);\n        expect(answers[1].response_time).toBe(32);\n        expect(answers[2]).toBe(123);\n     });\n\n\n    it(\"count in summary\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n        expect($practiceService.getSummary().count).toBe(0);\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        expect($practiceService.getSummary().count).toBe(2);\n        $practiceService.getFlashcard();\n        expect($practiceService.getSummary().count).toBe(2);\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n\n        expect($practiceService.getSummary().count).toBe(3);\n     });\n\n    it(\"correct in summary\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 5;\n        $practiceService.initSet(\"test\");\n        expect($practiceService.getSummary().correct).toBe(0);\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        expect($practiceService.getSummary().correct).toBe(0);\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n        expect($practiceService.getSummary().correct).toBe(0);\n        $practiceService.getFlashcard();\n        $timeout.flush();\n        $practiceService.saveAnswerToCurrentFC(2, 12, \"moje meta\");\n\n        expect($practiceService.getSummary().correct).toBe(1);\n     });\n\n    it(\"create good time gaps\", function() {\n        config.proso_flashcards.practice.test.fc_queue_size_max = config.proso_flashcards.practice.test.set_length = 2;\n        $practiceService.initSet(\"test\");\n\n        $practiceService.getFlashcard();\n        $httpBackend.flush();\n\n        $practiceService.saveAnswerToCurrentFC(42, 42000, \"moje meta\");\n\n        $practiceService.getFlashcard();\n        var d = Date.now() + 3000;\n        var x = spyOn(Date, 'now');\n        x.and.callFake(function() { return d; });\n        $practiceService.saveAnswerToCurrentFC(null, 12, \"moje meta\");\n\n        $httpBackend.expectPOST(\"/flashcards/answer/\", {\"answers\":[\n            {\"flashcard_id\":0,\"flashcard_answered_id\":42,\"response_time\":42000,\"direction\":\"xxxs\",\"meta\":\"moje meta\", time_gap:3},\n            {\"flashcard_id\":1,\"flashcard_answered_id\":null,\"response_time\":12,\"direction\":\"xxxs\",\"meta\":\"moje meta\", time_gap:0}\n        ]}).respond(200, \"OK\");\n        $httpBackend.flush();\n\n        expect($practiceService.getSummary().correct).toBe(0);\n\n    });\n});\n","describe(\"User Service\", function() {\n    var $httpBackend, $userService;\n    var test_user = {\n        \"profile\": {\n            \"send_emails\": true,\n            \"object_type\": \"user_profile\",\n            \"id\": 6,\n            \"public\": false\n        },\n        \"username\": \"test-user\",\n        \"first_name\": \"Test\",\n        \"last_name\": \"Testik\",\n        \"email\": \"test@proso.cz\",\n        \"id\": 10\n    };\n    var test_user_profile = {\n        \"send_emails\": true,\n        \"user\": {\n            \"username\": \"test-user\",\n            \"first_name\": \"Test\",\n            \"last_name\": \"Testik\",\n            \"object_type\": \"user\",\n            \"email\": \"test@proso.cz\",\n            \"id\": 10\n        },\n        \"object_type\": \"user_profile\",\n        \"id\": 6,\n        \"public\": false\n    };\n    var test_signup_data = {\n        username: test_user_profile.user.username,\n        email: test_user_profile.user.email,\n        password: \"heslo\",\n        password_check: \"heslo\",\n        first_name: test_user_profile.user.first_name,\n        last_name: test_user_profile.user.first_name\n    };\n    var error = { \"error_type\": \"error_type\", \"error\": \"error\"};\n\n    beforeEach(module('proso.apps.user-user'));\n\n    beforeEach(inject(function($injector) {\n        $httpBackend = $injector.get('$httpBackend');\n        $userService = $injector.get('userService');\n    }));\n\n    afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n    });\n\n    it(\"provide basic structure\", function() {\n        expect($userService.user).toBeDefined();\n        expect($userService.error).toBeDefined();\n        expect($userService.status).toBeDefined();\n        expect($userService.status.logged).toBeDefined();\n        expect($userService.status.loading).toBeDefined();\n    });\n\n    it(\"logout\", function(){\n        $httpBackend.expectGET(\"/user/profile/\").respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.loadUser();\n        $httpBackend.flush();\n        expect($userService.user).not.toEqual({});\n\n        $httpBackend.expectGET(\"/user/logout/\").respond(200, \"OK\");\n        $userService.logout();\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeFalsy();\n        expect($userService.user).toEqual({});\n    });\n\n    it(\"sign up\", function(){\n        $httpBackend.expectPOST(\"/user/signup/\").respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.signup(test_signup_data);\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeTruthy();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n        expect($userService.error).toEqual({});\n    });\n\n    it(\"sign up by params\", function(){\n        $httpBackend.expectPOST(\"/user/signup/\", test_signup_data).respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.signupParams(test_signup_data.username, test_signup_data.email, test_signup_data.password,\n            test_signup_data.password_check, test_signup_data.first_name, test_signup_data.last_name);\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeTruthy();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n        expect($userService.error).toEqual({});\n    });\n\n    it(\"fail sign up\", function(){\n        $httpBackend.expectPOST(\"/user/signup/\").respond(400, error);\n        $userService.signup(test_signup_data);\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeFalsy();\n        expect($userService.error).toEqual(error);\n    });\n\n    it(\"load user profile\", function(){\n        $httpBackend.expectGET(\"/user/profile/\").respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.loadUser();\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeTruthy();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n    });\n\n    it(\"fail load user profile\", function(){\n        $httpBackend.expectGET(\"/user/profile/\").respond(404);\n        $userService.loadUser();\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeFalsy();\n        expect($userService.user).toEqual({});\n    });\n\n    it(\"process user\", function(){\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.processUser(test_user_profile);\n        $httpBackend.flush();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n        expect($userService.status.logged).toBeTruthy();\n    });\n\n    it(\"process user should not change object\", function(){\n        var obj = angular.copy(test_user_profile);\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.processUser(obj);\n        $httpBackend.flush();\n        expect(obj).toEqual(test_user_profile);\n    });\n\n    it(\"login\", function(){\n        $httpBackend.expectPOST(\"/user/login/\", {\"username\":\"login\",\"password\":\"pass\"}).respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.login(\"login\", \"pass\");\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeTruthy();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n        expect($userService.error).toEqual({});\n    });\n\n    it(\"fail login\", function(){\n        $httpBackend.expectPOST(\"/user/login/\", {\"username\":\"login\",\"password\":\"pass\"}).respond(400, error);\n        $userService.login(\"login\", \"pass\");\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.status.logged).toBeFalsy();\n        expect($userService.error).toEqual(error);\n    });\n\n    it(\"load session\", function(){\n        $httpBackend.expectGET(\"/user/session/\").respond(200, {data: \"mySession\"});\n        $userService.loadSession();\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.user.session).toBe(\"mySession\");\n    });\n\n    it(\"update profile\", function(){\n        $httpBackend.expectPOST(\"/user/profile/\", {data: \"profile data\"}).respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.updateProfile({data: \"profile data\"});\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.user).toEqual(jasmine.objectContaining(test_user));\n        expect($userService.error).toEqual({});\n\n    });\n\n    it(\"fail update profile\", function(){\n        $httpBackend.expectPOST(\"/user/profile/\", {data: \"profile data\"}).respond(400, error);\n        $userService.updateProfile({data: \"profile data\"});\n        expect($userService.status.loading).toBeTruthy();\n        $httpBackend.flush();\n        expect($userService.status.loading).toBeFalsy();\n        expect($userService.error).toEqual(error);\n\n    });\n\n    it(\"update session\", function(){\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.updateSession();\n        $httpBackend.flush();\n        expect(true).toBe(true);\n    });\n\n    it(\"not update session twice\", function(){\n        $httpBackend.expectGET(\"/user/profile/\").respond(200, {data: test_user_profile});\n        $httpBackend.expectPOST(\"/user/session/\").respond(200);\n        $userService.loadUser();\n        $httpBackend.flush();\n\n        $httpBackend.expectGET(\"/user/profile/\").respond(200, {data: test_user_profile});\n        $userService.loadUser();\n        $httpBackend.flush();\n        expect(true).toBe(true);\n    });\n\n    it(\"not update session when not logged in\", function(){\n        $httpBackend.expectGET(\"/user/profile/\").respond(404);\n        $userService.loadUser();\n        $httpBackend.flush();\n        expect(true).toBe(true);\n    });\n});\n\n","var m = angular.module('proso.apps.user-user', ['ngCookies']);\nm.service(\"userService\", [\"$http\", function($http){\n    var self = this;\n    self.status = {\n        \"logged\": false,\n        \"loading\": false\n    };\n    self.user = {};\n    var update = this.update = {};\n    var sessionUpdated = false;\n    self.error = {};\n\n    // called on create\n    self.init = function (){\n    };\n\n    self.signup = function(data){\n        self.status.loading = true;\n        _resetError();\n        return $http.post(\"/user/signup/\", data)\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.signupParams = function(name, email, pass, pass2, firstName, lastName){\n        return self.signup({\n            \"username\": name,\n            \"email\": email,\n            \"password\": pass,\n            \"password_check\": pass2,\n            \"first_name\": firstName,\n            \"last_name\": lastName\n        });\n    };\n\n    // get user profile from backend\n    self.loadUser = function(){\n        self.status.loading = true;\n        return $http.get(\"/user/profile/\")\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.processUser = function(data){\n        _processUser(angular.copy(data));\n    };\n\n    // process user data\n    var _processUser = function(data){\n        if (!data) {\n            self.status.logged = false;\n            return;\n        }\n        self.status.logged = true;\n        self.user.profile = data;\n        angular.extend(self.user, data.user);\n        angular.extend(update, {\n            user: {\n                first_name: self.user.first_name,\n                last_name: self.user.last_name\n            },\n            send_emails: self.user.profile.send_emails,\n            public: self.user.profile.public\n        });\n        delete self.user.profile.user;\n        if (!sessionUpdated){\n            self.updateSession();\n            sessionUpdated = true;\n        }\n    };\n\n    self.login = function(name, pass){\n        self.status.loading = true;\n        _resetError();\n        return $http.post(\"/user/login/\", {\n            username: name,\n            password: pass\n        })\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.logout = function(){\n        self.status.loading = true;\n        $http.get(\"/user/logout/\")\n            .success(function(response){\n                clearObj(self.user);\n                self.status.logged = false;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n\n    var _resetError = function(){\n        clearObj(self.error);\n    };\n\n    var clearObj = function(obj){\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)){ delete obj[prop]; }\n        }\n    };\n\n\n    self.loadUserFromJS = function (scope) {\n        scope.$apply(self.loadUser());\n    };\n\n    self.loadSession = function(){\n        self.status.loading = true;\n        $http.get(\"/user/session/\")\n            .success(function(response){\n                self.user.session = response.data;\n            })\n            .finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.updateSession = function(){\n        var data = {\n            locale: window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage,\n            display_height: window.innerHeight,\n            display_width: window.innerWidth\n        };\n        try{\n            data.time_zone = jstz.determine().name();\n        }catch (err){ console.log(\"JSTimeZone lib not loaded\");}\n        $http.post(\"/user/session/\", data).error(function(){\n            console.error(\"Error while updating session\");\n        });\n    };\n\n    self.updateProfile = function(data){\n        self.status.loading = true;\n        _resetError();\n        $http.post(\"/user/profile/\", data)\n            .success(function(response){\n                _processUser(response.data);\n            })\n            .error(function(response){\n                self.error = response;\n            }).finally(function(response){\n                self.status.loading = false;\n            });\n    };\n\n    self.loginGoogle = function() {\n        _openPopup('/login/google-oauth2/', '/user/close_popup/');\n    };\n\n    self.loginFacebook = function() {\n        _openPopup('/login/facebook/', '/user/close_popup/');\n    };\n\n    var _openPopup = function(url, next){\n        var settings = 'height=700,width=700,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=yes,directories=no,status=yes';\n        url += \"?next=\" + next;\n        window.open(url, \"popup\", settings);\n    };\n\n    self.init();\n\n}]);\n","angular.module(\"templates/common-toolbar/toolbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/common-toolbar/toolbar.html\",\n    \"<div id=\\\"proso-toolbar\\\">\\n\" +\n    \"    <div id=\\\"config-bar-show-button\\\" ng-click=\\\"opened = !opened\\\" ng-hide=\\\"opened\\\"> proso bar </div>\\n\" +\n    \"\\n\" +\n    \"    <div id=\\\"config-bar\\\" ng-cloak ng-show=\\\"opened\\\">\\n\" +\n    \"        <div id=\\\"config-bar-header\\\">\\n\" +\n    \"            <span id=\\\"config-bar-hide\\\" ng-click=\\\"opened = !opened\\\">Close</span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <ul id=\\\"config-bar-content\\\">\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"addToOverride(propertyToOverride)\\\" class=\\\"add-to-override\\\">+</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"propertyToOverride\\\" id=\\\"config-bar-property-name\\\" placeholder=\\\"Property Name\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('user'); overridden.user = null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"number\\\" ng-model=\\\"overridden.user\\\" placeholder=\\\"User\\\" ng-change=\\\"override('user', overridden.user)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <li>\\n\" +\n    \"                <span ng-click=\\\"removeOverridden('time'); overridden.time= null;\\\" class=\\\"reset\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" ng-model=\\\"overridden.time\\\" placeholder=\\\"Time\\\" ng-change=\\\"override('time', overridden.time)\\\" />\\n\" +\n    \"                <i>{{date | date:'yyyy-MM-dd_HH:mm:ss'}}</i>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ng-repeat=\\\"(name, value) in getOverridden() track by name\\\">\\n\" +\n    \"                <span class=\\\"reset\\\" ng-click=\\\"removeOverridden(name)\\\">X</span>\\n\" +\n    \"                <input type=\\\"text\\\" disabled class=\\\"property-name\\\" ng-model=\\\"name\\\" />\\n\" +\n    \"                <input type=\\\"text\\\" class=\\\"property-value\\\" placeholder=\\\"Value\\\" ng-model=\\\"value\\\" ng-change=\\\"override(name, value)\\\" />\\n\" +\n    \"            </li>\\n\" +\n    \"            <div class='section' ng-click=\\\"loggingOpened = !loggingOpened\\\">Logging</div>\\n\" +\n    \"            <ul id=\\\"config-bar-logging\\\" ng-cloak ng-show=\\\"loggingOpened\\\">\\n\" +\n    \"                <li ng-repeat=\\\"event in debugLog|limitTo:100\\\" class=\\\"logging-event\\\">\\n\" +\n    \"                    <span class=\\\"level\\\">{{ event.level }}</span>\\n\" +\n    \"                    <span class=\\\"url\\\">{{ event.url }}</span>\\n\" +\n    \"                    <span class=\\\"filename\\\">{{ event.filename }}:{{ event.line_number }}</span>\\n\" +\n    \"                    <span class=\\\"message\\\">{{ event.message }}</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n","angular.module(\"templates/feedback-comment/comment.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/feedback-comment/comment.html\",\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"    <h3 class=\\\"modal-title\\\">{{ \\\"Write to us\\\" | trans }}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <label>\\n\" +\n    \"      {{ \\\"Did you find a bug in the app? Do you have an improvement idea? Or any other comment? We are eager to hear anything you'd like to tell us.\\\" | trans }}\\n\" +\n    \"    </label>\\n\" +\n    \"    <textarea ng-model=\\\"feedback.text\\\" class=\\\"form-control\\\" rows=\\\"8\\\" ></textarea>\\n\" +\n    \"    <label>\\n\" +\n    \"      {{ \\\"Your email address (optional)\\\" | trans }}\\n\" +\n    \"    </label>\\n\" +\n    \"    <input type=\\\"text\\\" ng-model=\\\"feedback.email\\\" class=\\\"form-control\\\"/>\\n\" +\n    \"    <br>\\n\" +\n    \"    <alert ng-repeat=\\\"alert in alerts\\\" type=\\\"{{alert.type}}\\\" close=\\\"closeAlert($index)\\\">{{alert.msg}}</alert>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"    <button ng-disabled=\\\"sending\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"send()\\\">\\n\" +\n    \"      {{ \\\"Send\\\" | trans }}\\n\" +\n    \"    </button>\\n\" +\n    \"    <button class=\\\"btn btn-danger\\\" ng-click=\\\"cancel()\\\">\\n\" +\n    \"      {{ \\\"Close\\\" | trans }}\\n\" +\n    \"    </button>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"\");\n}]);\n","angular.module(\"templates/feedback-rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/feedback-rating/rating.html\",\n    \"<div class=\\\"modal-header text-center\\\">\\n\" +\n    \"    <h3 class=\\\"modal-title\\\">{{ \\\"How difficult are the questions?\\\" | trans }}</h3>\\n\" +\n    \"    {{ \\\"Your answer helps us adjust difficulty of questions.\\\" | trans}}\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"rating modal-body\\\">\\n\" +\n    \"    <div class=\\\" text-center\\\" ng-hide=\\\"answer\\\">\\n\" +\n    \"        <a class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vote(1)\\\">\\n\" +\n    \"            {{\\\"Too easy\\\" | trans }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <a class=\\\"btn btn-lg btn-primary\\\" ng-click=\\\"vote(2)\\\">\\n\" +\n    \"            {{ \\\"Appropriate\\\" | trans }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <a class=\\\"btn btn-lg btn-danger\\\" ng-click=\\\"vote(3)\\\">\\n\" +\n    \"            {{ \\\"Too difficult\\\" | trans }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <div class=\\\"clearfix\\\"></div>\\n\" +\n    \"        <a class=\\\"pull-right dont-know\\\" href=\\\"\\\" ng-click=\\\"cancel()\\\">\\n\" +\n    \"            {{ \\\"Don't know / Don't want to rate\\\" | trans }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <div class=\\\"clearfix\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <alert ng-repeat=\\\"alert in alerts\\\" type=\\\"{{alert.type}}\\\" close=\\\"closeAlert($index)\\\">{{alert.msg}}</alert>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\" ng-show=\\\"answer\\\">\\n\" +\n    \"    <button class=\\\"btn btn-danger\\\" ng-click=\\\"cancel()\\\">\\n\" +\n    \"        {{ \\\"Close\\\" | trans }}\\n\" +\n    \"    </button>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"\");\n}]);\n","angular.module(\"templates/user-login/login-modal.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/user-login/login-modal.html\",\n    \"<div class=\\\"modal-header text-center\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"cancel()\\\">\\n\" +\n    \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\n    \"    </button>\\n\" +\n    \"    <h3 class=\\\"modal-title\\\"> {{ \\\"Sign In\\\" | translate }} </h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"    <a class=\\\"btn btn-danger btn-lg btn-block\\\"\\n\" +\n    \"        track-click=\\\"login\\\"\\n\" +\n    \"        href=\\\"/login/google-oauth2/\\\">\\n\" +\n    \"        <i class=\\\"social-google\\\"></i> {{ \\\"via Google\\\" | translate }}\\n\" +\n    \"    </a>\\n\" +\n    \"    <br>\\n\" +\n    \"    <a class=\\\"btn btn-primary btn-lg btn-block\\\"\\n\" +\n    \"        track-click=\\\"login\\\"\\n\" +\n    \"        href=\\\"/login/facebook/\\\">\\n\" +\n    \"        <i class=\\\"social-facebook\\\"></i>{{ \\\"via Facebook\\\" | translate }}\\n\" +\n    \"    </a>\\n\" +\n    \"\\n\" +\n    \"    <br>\\n\" +\n    \"    <hr>\\n\" +\n    \"    <br>\\n\" +\n    \"\\n\" +\n    \"    <form role=\\\"form\\\" ng-submit=\\\"loginEmail()\\\">\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"credentials.username\\\"\\n\" +\n    \"            name=\\\"username\\\" placeholder=\\\"{{ 'Username' | translate }}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"password\\\" class=\\\"form-control\\\" ng-model=\\\"credentials.password\\\"\\n\" +\n    \"            name=\\\"password\\\" placeholder=\\\"{{ 'Password' | translate }}\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"        <alert ng-repeat=\\\"alert in alerts\\\" type=\\\"{{alert.type}}\\\"\\n\" +\n    \"            close=\\\"closeAlert($index)\\\">{{alert.msg}}</alert>\\n\" +\n    \"        <button ng-disabled=\\\"userService.status.loading\\\" type=\\\"submit\\\"\\n\" +\n    \"            class=\\\"btn btn-primary btn-block btn-lg\\\">\\n\" +\n    \"            {{ 'Sign In' | translate }}\\n\" +\n    \"        </button>\\n\" +\n    \"\\n\" +\n    \"    </form>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\" >\\n\" +\n    \"        <a class=\\\"btn btn-link\\\" ng-click=\\\"openSignupModal()\\\">\\n\" +\n    \"            {{ 'Sign Up' | translate }}\\n\" +\n    \"        </a>\\n\" +\n    \"\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n","angular.module(\"templates/user-login/signup-modal.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"templates/user-login/signup-modal.html\",\n    \"<div class=\\\"modal-header text-center\\\">\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"cancel()\\\">\\n\" +\n    \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\n    \"    </button>\\n\" +\n    \"    <h3 class=\\\"modal-title\\\"> {{ \\\"Sign Up\\\" | translate }} </h3>\\n\" +\n    \"    <div ng-hide=\\\"success\\\">\\n\" +\n    \"        {{\\\" and get all the benefits of registered users.\\\" | translate }}\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\" ng-hide=\\\"success\\\">\\n\" +\n    \"    <div ng-hide=\\\"activateEmail\\\">\\n\" +\n    \"        <a class=\\\"btn btn-danger btn-lg btn-block\\\"\\n\" +\n    \"            track-click=\\\"login\\\"\\n\" +\n    \"            href=\\\"/login/google-oauth2/\\\">\\n\" +\n    \"            <i class=\\\"social-google\\\"></i> {{ \\\"via Google\\\" | translate }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <br>\\n\" +\n    \"        <a class=\\\"btn btn-primary btn-lg btn-block\\\"\\n\" +\n    \"            track-click=\\\"login\\\"\\n\" +\n    \"            href=\\\"/login/facebook/\\\">\\n\" +\n    \"            <i class=\\\"social-facebook\\\"></i>{{ \\\"via Facebook\\\" | translate }}\\n\" +\n    \"        </a>\\n\" +\n    \"        <br>\\n\" +\n    \"        <a class=\\\"btn btn-info btn-lg btn-block\\\"\\n\" +\n    \"            ng-click=\\\"activateEmail=true\\\"\\n\" +\n    \"            href=\\\"\\\">\\n\" +\n    \"            <i class=\\\"glyphicon glyphicon-envelope\\\"></i> {{ \\\"via E-mail\\\" | translate }}\\n\" +\n    \"        </a>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <form role=\\\"form\\\" ng-show=\\\"activateEmail\\\" ng-submit=\\\"signup()\\\">\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"email\\\" class=\\\"form-control\\\" ng-model=\\\"credentials.email\\\"\\n\" +\n    \"                placeholder=\\\"{{ 'E-mail' | translate }}\\\" required>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"credentials.username\\\"\\n\" +\n    \"                name=\\\"username\\\" placeholder=\\\"{{ 'Username' | translate }}\\\" required>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"password\\\" class=\\\"form-control\\\" ng-model=\\\"credentials.password\\\"\\n\" +\n    \"                name=\\\"password\\\" placeholder=\\\"{{ 'Password' | translate }}\\\" required>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"form-group\\\">\\n\" +\n    \"            <input type=\\\"password\\\" class=\\\"form-control\\\"\\n\" +\n    \"                ng-model=\\\"credentials.password_check\\\"\\n\" +\n    \"                placeholder=\\\"{{ 'Password again' | translate }}\\\" required>\\n\" +\n    \"        </div>\\n\" +\n    \"        <alert ng-repeat=\\\"alert in alerts\\\" type=\\\"{{alert.type}}\\\"\\n\" +\n    \"            close=\\\"closeAlert($index)\\\">{{alert.msg}}</alert>\\n\" +\n    \"        <button ng-disabled=\\\"userService.status.loading\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-lg\\\">\\n\" +\n    \"            {{ 'Sign Up' | translate }}\\n\" +\n    \"        </button>\\n\" +\n    \"    </form>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\" ng-show=\\\"success\\\" >\\n\" +\n    \"        <alert type=\\\"success\\\">\\n\" +\n    \"            {{ 'Registration was successful. You can continue to use the application.' | translate }}\\n\" +\n    \"        </alert>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"\");\n}]);\n"]}